From 34693296052eee94d1b6652c178ef20a5e8b1d83 Mon Sep 17 00:00:00 2001
From: Alessandro Astone <ales.astone@gmail.com>
Date: Fri, 29 Mar 2019 00:41:35 +0100
Subject: [PATCH 57/62] recovery: setup a threshold to ignore touch release
 events after a swipe

Change-Id: I42bb91a83c44a4da92c1e85bcea9849e046253dd
---
 ui.cpp | 16 +++++++++++++---
 ui.h   |  1 +
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/ui.cpp b/ui.cpp
index 02505329..f61ecd70 100644
--- a/ui.cpp
+++ b/ui.cpp
@@ -80,6 +80,7 @@ RecoveryUI::RecoveryUI()
       touch_saw_x_(false),
       touch_saw_y_(false),
       touch_reported_(false),
+      has_swiped_(false),
       is_bootreason_recovery_ui_(false),
       volumes_changed_(false),
       screensaver_state_(ScreensaverState::DISABLED) {
@@ -242,15 +243,23 @@ void RecoveryUI::OnTouchPress() {
 }
 
 void RecoveryUI::OnTouchTrack() {
+  // Arbitrary swipe threshold to ignore the following release.
+  // Use MenuItemHeight as a quick way to get a density sensitive value
+  static const int kSwipeThresh = MenuItemHeight() / 30;
+
   if (touch_pos_.y() <= gr_fb_height()) {
     if (MenuShowing() && MenuScrollable()) {
-      while (abs(touch_pos_.y() - touch_track_.y()) >= MenuItemHeight()) {
-        int dy = touch_pos_.y() - touch_track_.y();
+      int dy = touch_pos_.y() - touch_track_.y();
+      if (abs(dy) > kSwipeThresh) {
+        has_swiped_ = true;
+      }
+      if (abs(dy) >= MenuItemHeight()) {
         int key = (dy < 0) ? KEY_SCROLLDOWN : KEY_SCROLLUP; // natural scrolling
         ProcessKey(key, 1); // press key
         ProcessKey(key, 0); // and release it
         int sgn = (dy > 0) - (dy < 0);
         touch_track_.y(touch_track_.y() + sgn * MenuItemHeight());
+        has_swiped_ = true;
       }
     }
   }
@@ -275,7 +284,8 @@ void RecoveryUI::OnTouchRelease() {
   }
 
   // If we tracked a vertical swipe, ignore the release
-  if (touch_track_ != touch_start_) {
+  if (has_swiped_) {
+    has_swiped_ = false;
     return;
   }
 
diff --git a/ui.h b/ui.h
index 2d88fabc..5ea54d83 100644
--- a/ui.h
+++ b/ui.h
@@ -344,6 +344,7 @@ class RecoveryUI {
   Point touch_pos_;
   Point touch_start_;
   Point touch_track_;
+  bool has_swiped_;
   std::vector<vkey_t> virtual_keys_;
   bool is_bootreason_recovery_ui_;
 
-- 
2.17.1

