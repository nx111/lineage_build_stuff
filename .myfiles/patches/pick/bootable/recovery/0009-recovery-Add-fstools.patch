From 0d7d9c37b24af70e7fdb7040f18b8d9ba7232d47 Mon Sep 17 00:00:00 2001
From: Tom Marshall <tdm.code@gmail.com>
Date: Thu, 17 Jan 2019 16:05:59 -0800
Subject: [PATCH 09/44] recovery: Add fstools

Support all filesystem tools via multi-call invocation.

 * ext4: mkfs.ext4, fsck.ext4, and alternative names

 * f2fs: mkfs.f2fs, fsck.f2fs

 * vfat: fsck_msdos

 * exfat: mkfs.exfat, fsck.exfat

 * ntfs: mkfs.ntfs, fsck.ntfs, mount.ntfs

 * sgdisk

 * Android specific tools e2fsdroid, sload.f2fs

Also remove TARGET_USERIMAGES_USE_F2FS guard for f2fs.  Building f2fs
does not really add that much to the recovery image size.

Change-Id: I69a55ad3048718112970fe0ca2d7d38a1aaacf52
---
 Android.mk          | 62 ++++++++++++++++++++++++++++++++++++++++-----
 recovery.cpp        | 31 +++++++++++++++++++++++
 recovery_cmds.h     | 20 +++++++++++++++
 updater/install.cpp |  5 ++++
 4 files changed, 112 insertions(+), 6 deletions(-)

diff --git a/Android.mk b/Android.mk
index 4b764e95..a68fd96e 100644
--- a/Android.mk
+++ b/Android.mk
@@ -87,11 +87,7 @@ LOCAL_MODULE := recovery
 
 LOCAL_FORCE_STATIC_EXECUTABLE := true
 
-LOCAL_REQUIRED_MODULES := e2fsdroid_static mke2fs_static mke2fs.conf
-
-ifeq ($(TARGET_USERIMAGES_USE_F2FS),true)
-LOCAL_REQUIRED_MODULES += sload.f2fs mkfs.f2fs
-endif
+LOCAL_REQUIRED_MODULES := mke2fs.conf
 
 LOCAL_CFLAGS += -DRECOVERY_API_VERSION=$(RECOVERY_API_VERSION)
 LOCAL_CFLAGS += -Wall -Werror
@@ -194,6 +190,59 @@ LOCAL_STATIC_LIBRARIES += \
     libselinux \
     libz
 
+# Libraries for FS tools
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libext2fs \
+    libe2fsck \
+    libmke2fs \
+    libsparse
+
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libe2fsdroid
+
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libf2fs \
+    libf2fs_fsck \
+    libf2fs_mkfs
+
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libfsck_msdos
+
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libexfat \
+    libexfat_mkfs \
+    libexfat_fsck
+
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libfuse-lite \
+    libntfs-3g \
+    libntfs_utils \
+    libntfs_fsck \
+    libntfs_mkfs \
+    libntfs_mount
+
+LOCAL_WHOLE_STATIC_LIBRARIES += \
+    libsgdisk_static
+
+LOCAL_STATIC_LIBRARIES += \
+    libext2_blkid \
+    libext2_uuid \
+    libext2_profile \
+    libext2_quota \
+    libext2_com_err \
+    libext2_e2p \
+    libc++_static \
+    libz
+
+FILESYSTEM_TOOLS := \
+    e2fsdroid e2fsdroid_static \
+    e2fsck mke2fs mke2fs_static fsck.ext4 mkfs.ext4 \
+    mkfs.f2fs fsck.f2fs sload.f2fs \
+    fsck_msdos \
+    fsck.exfat mkfs.exfat \
+    fsck.ntfs mkfs.ntfs mount.ntfs \
+    sgdisk
+
 LOCAL_HAL_STATIC_LIBRARIES := libhealthd
 
 ifeq ($(AB_OTA_UPDATER),true)
@@ -224,7 +273,8 @@ RECOVERY_TOOLS := \
     gunzip \
     gzip \
     unzip \
-    zip
+    zip \
+    $(FILESYSTEM_TOOLS)
 LOCAL_POST_INSTALL_CMD := $(hide) $(foreach t,$(RECOVERY_TOOLS),ln -sf ${LOCAL_MODULE} $(LOCAL_MODULE_PATH)/$(t);)
 
 include $(BUILD_EXECUTABLE)
diff --git a/recovery.cpp b/recovery.cpp
index b42443ea..5445b4d6 100644
--- a/recovery.cpp
+++ b/recovery.cpp
@@ -73,6 +73,11 @@
 #include "stub_ui.h"
 #include "ui.h"
 
+// For e2fsprogs
+extern "C" {
+const char* program_name = "fstools";
+}
+
 #include "recovery_cmds.h"
 
 struct recovery_cmd {
@@ -88,6 +93,32 @@ static const struct recovery_cmd recovery_cmds[] = {
   { "unzip",          miniunz_main },
   { "zip",            minizip_main },
   { "sh",             mksh_main },
+
+  /* Filesystem tools */
+  { "e2fsdroid",        e2fsdroid_main },
+  { "e2fsdroid_static", e2fsdroid_main },
+  { "sload.f2fs",       fsck_f2fs_main },
+
+  { "mke2fs",         mke2fs_main },
+  { "mke2fs_static",  mke2fs_main },
+  { "e2fsck",         e2fsck_main },
+  { "fsck.ext4",      e2fsck_main },
+  { "mkfs.ext4",      mke2fs_main },
+
+  { "mkfs.f2fs",      mkfs_f2fs_main },
+  { "fsck.f2fs",      fsck_f2fs_main },
+
+  { "fsck_msdos",     fsck_msdos_main },
+
+  { "mkfs.exfat",     mkfs_exfat_main },
+  { "fsck.exfat",     fsck_exfat_main },
+
+  { "fsck.ntfs",      fsck_ntfs_main },
+  { "mkfs.ntfs",      mkfs_ntfs_main },
+  { "mount.ntfs",     mount_ntfs_main },
+
+  { "sgdisk",         sgdisk_main },
+
   { nullptr, nullptr },
 };
 
diff --git a/recovery_cmds.h b/recovery_cmds.h
index b5a8825b..b2bf8ad4 100644
--- a/recovery_cmds.h
+++ b/recovery_cmds.h
@@ -30,6 +30,26 @@ int start_main(int argc, char **argv);
 int stop_main(int argc, char **argv);
 int mksh_main(int argc, char **argv);
 
+/* Filesystem tools */
+int e2fsdroid_main(int argc, char **argv);
+
+int mke2fs_main(int argc, char **argv);
+int e2fsck_main(int argc, char **argv);
+
+int mkfs_f2fs_main(int argc, char **argv);
+int fsck_f2fs_main(int argc, char **argv);
+
+int fsck_msdos_main(int argc, char **argv);
+
+int mkfs_exfat_main(int argc, char **argv);
+int fsck_exfat_main(int argc, char **argv);
+
+int mkfs_ntfs_main(int argc, char **argv);
+int fsck_ntfs_main(int argc, char **argv);
+int mount_ntfs_main(int argc, char **argv);
+
+int sgdisk_main(int argc, char **argv);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/updater/install.cpp b/updater/install.cpp
index b594ed37..dc5223c5 100644
--- a/updater/install.cpp
+++ b/updater/install.cpp
@@ -66,6 +66,11 @@
 #include "tune2fs.h"
 #include "updater/updater.h"
 
+// For e2fsprogs
+extern "C" {
+const char* program_name = "fstools";
+}
+
 // Send over the buffer to recovery though the command pipe.
 static void uiPrint(State* state, const std::string& buffer) {
   UpdaterInfo* ui = static_cast<UpdaterInfo*>(state->cookie);
-- 
2.17.1

