From fec28b2f87b8cc1b9b831b717f96236980639813 Mon Sep 17 00:00:00 2001
From: Tom Marshall <tdm@cyngn.com>
Date: Tue, 25 Nov 2014 12:58:22 -0800
Subject: [PATCH 19/44] recovery: Return to main menu after selection

Change-Id: Ib6fd1904b6516a651ffaad20f66b2eaf42c31619
---
 recovery.cpp | 46 ++++++++++++++++++++++------------------------
 1 file changed, 22 insertions(+), 24 deletions(-)

diff --git a/recovery.cpp b/recovery.cpp
index c8e8bd9d..ac174159 100644
--- a/recovery.cpp
+++ b/recovery.cpp
@@ -1241,31 +1241,29 @@ refresh:
 
     int status = INSTALL_ERROR;
 
-    for (;;) {
-        int chosen = get_menu_selection(headers, menu_items, 0, 0, device);
-        for (i = 0; i < n; ++i) {
-            free(menu_items[i]);
-        }
-        if (chosen == Device::kRefresh) {
-            goto refresh;
-        }
-        if (chosen == Device::kGoBack) {
-            break;
-        }
-        if (chosen == item_sideload) {
-            static const char* headers[] = { "ADB Sideload", nullptr };
-            static const char* list[] = { "Cancel sideload", nullptr };
-
-            start_sideload(wipe_cache, TEMPORARY_INSTALL_FILE);
-            int item = get_menu_selection(headers, list, 0, 0, device);
-            if (item != Device::kNoAction) {
-                stop_sideload();
-            }
-            status = wait_sideload();
-        }
-        else {
-            status = apply_from_storage(device, volumes[chosen - 1], wipe_cache);
+    int chosen = get_menu_selection(headers, menu_items, 0, 0, device);
+    for (i = 0; i < n; ++i) {
+        free(menu_items[i]);
+    }
+    if (chosen == Device::kRefresh) {
+        goto refresh;
+    }
+    if (chosen == Device::kGoBack) {
+        return INSTALL_NONE;
+    }
+    if (chosen == item_sideload) {
+        static const char* headers[] = { "ADB Sideload", nullptr };
+        static const char* list[] = { "Cancel sideload", nullptr };
+
+        start_sideload(wipe_cache, TEMPORARY_INSTALL_FILE);
+        int item = get_menu_selection(headers, list, 0, 0, device);
+        if (item != Device::kNoAction) {
+            stop_sideload();
         }
+        status = wait_sideload();
+    }
+    else {
+        status = apply_from_storage(device, volumes[chosen - 1], wipe_cache);
     }
 
     return status;
-- 
2.17.1

