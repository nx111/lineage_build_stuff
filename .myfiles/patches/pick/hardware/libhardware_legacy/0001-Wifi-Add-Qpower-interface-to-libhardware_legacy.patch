From b4bdd1fd78611079c776e01bf6218b1fac60778a Mon Sep 17 00:00:00 2001
From: Roopesh Rajashekharaiah Nataraja <roopeshr@codeaurora.org>
Date: Thu, 16 Nov 2017 16:33:21 +0800
Subject: [PATCH 1/2] Wifi: Add Qpower interface to libhardware_legacy

Add Qpower interface to libhardware_legacy.

Change-Id: Ifb73683a138ded82bbd708b0cfde68cb5b98f900
CRs-Fixed: 2145144
---
 include/hardware_legacy/wifi_config.h | 97 ++++++++++++++-------------
 include/hardware_legacy/wifi_hal.h    |  5 +-
 2 files changed, 53 insertions(+), 49 deletions(-)

diff --git a/include/hardware_legacy/wifi_config.h b/include/hardware_legacy/wifi_config.h
index 8ad14f4..d3e8f97 100644
--- a/include/hardware_legacy/wifi_config.h
+++ b/include/hardware_legacy/wifi_config.h
@@ -1,47 +1,50 @@
-#include "wifi_hal.h"
-
-#ifndef __WIFI_HAL_CONFIG_H
-#define __WIFI_HAL_CONFIG_H
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif /* __cplusplus */
-
-#define CONFIG_MAJOR_VERSION      1
-#define CONFIG_MINOR_VERSION      0
-#define CONFIG_MICRO_VERSION      0
-
-typedef int wifi_radio;
-
-// whether the wifi chipset wakes at every dtim beacon or a multiple of the dtim period
-// if extended_dtim is set to 3, the STA shall wake up every 3 DTIM beacons
-wifi_error wifi_extended_dtim_config_set(wifi_request_id id,
-        wifi_interface_handle iface, int extended_dtim);
-
-//set the country code to driver
-wifi_error wifi_set_country_code(wifi_interface_handle iface, const char* country_code);
-
-//set the wifi_iface stats averaging factor used to calculate
-// statistics like average the TSF offset or average number of frame leaked
-// For instance, upon beacon reception:
-//    current_avg = ((beacon_TSF - TBTT) * factor + previous_avg * (0x10000 - factor) ) / 0x10000
-// For instance, when evaluating leaky APs:
-//    current_avg = ((num frame received within guard time) * factor + previous_avg * (0x10000 - factor)) / 0x10000
-
-wifi_error wifi_set_beacon_wifi_iface_stats_averaging_factor(wifi_request_id id, wifi_interface_handle iface,
-        u16 factor);
-
-// configure guard time, i.e. when implementing IEEE power management based on
-// frame control PM bit, how long driver waits before shutting down the radio and
-// after receiving an ACK for a data frame with PM bit set
-wifi_error wifi_set_guard_time(wifi_request_id id, wifi_interface_handle iface,
-        u32 guard_time);
-
-#ifdef __cplusplus
-}
-
-#endif /* __cplusplus */
-
-#endif /*__WIFI_HAL_STATS_ */
-
+#include "wifi_hal.h"
+
+#ifndef __WIFI_HAL_CONFIG_H
+#define __WIFI_HAL_CONFIG_H
+
+#ifdef __cplusplus
+extern "C"
+{
+#endif /* __cplusplus */
+
+#define CONFIG_MAJOR_VERSION      1
+#define CONFIG_MINOR_VERSION      0
+#define CONFIG_MICRO_VERSION      0
+
+typedef int wifi_radio;
+
+// whether the wifi chipset wakes at every dtim beacon or a multiple of the dtim period
+// if extended_dtim is set to 3, the STA shall wake up every 3 DTIM beacons
+wifi_error wifi_extended_dtim_config_set(wifi_request_id id,
+        wifi_interface_handle iface, int extended_dtim);
+
+//set the country code to driver
+wifi_error wifi_set_country_code(wifi_interface_handle iface, const char* country_code);
+
+//Set the powersave to driver
+wifi_error wifi_set_qpower(wifi_interface_handle iface, u8 powersave);
+
+//set the wifi_iface stats averaging factor used to calculate
+// statistics like average the TSF offset or average number of frame leaked
+// For instance, upon beacon reception:
+//    current_avg = ((beacon_TSF - TBTT) * factor + previous_avg * (0x10000 - factor) ) / 0x10000
+// For instance, when evaluating leaky APs:
+//    current_avg = ((num frame received within guard time) * factor + previous_avg * (0x10000 - factor)) / 0x10000
+
+wifi_error wifi_set_beacon_wifi_iface_stats_averaging_factor(wifi_request_id id, wifi_interface_handle iface,
+        u16 factor);
+
+// configure guard time, i.e. when implementing IEEE power management based on
+// frame control PM bit, how long driver waits before shutting down the radio and
+// after receiving an ACK for a data frame with PM bit set
+wifi_error wifi_set_guard_time(wifi_request_id id, wifi_interface_handle iface,
+        u32 guard_time);
+
+#ifdef __cplusplus
+}
+
+#endif /* __cplusplus */
+
+#endif /*__WIFI_HAL_STATS_ */
+
diff --git a/include/hardware_legacy/wifi_hal.h b/include/hardware_legacy/wifi_hal.h
index 71f7a3e..22ea71e 100644
--- a/include/hardware_legacy/wifi_hal.h
+++ b/include/hardware_legacy/wifi_hal.h
@@ -353,9 +353,9 @@ typedef struct {
             int num, wifi_passpoint_network *networks, wifi_passpoint_event_handler handler);
     wifi_error (* wifi_reset_passpoint_list)(wifi_request_id id, wifi_interface_handle iface);
     wifi_error (*wifi_set_lci) (wifi_request_id id, wifi_interface_handle iface,
-	                             wifi_lci_information *lci);
+                                 wifi_lci_information *lci);
     wifi_error (*wifi_set_lcr) (wifi_request_id id, wifi_interface_handle iface,
-	                             wifi_lcr_information *lcr);
+                                 wifi_lcr_information *lcr);
     wifi_error (*wifi_start_sending_offloaded_packet)(wifi_request_id id,
                                 wifi_interface_handle iface, u8 *ip_packet, u16 ip_packet_len,
                                 u8 *src_mac_addr, u8 *dst_mac_addr, u32 period_msec);
@@ -462,6 +462,7 @@ typedef struct {
                                                fw_roaming_state_t state);
     wifi_error (*wifi_configure_roaming)(wifi_interface_handle handle,
                                          wifi_roaming_config *roaming_config);
+    wifi_error (*wifi_set_qpower)(wifi_interface_handle iface, u8 powersave);
     wifi_error (*wifi_set_radio_mode_change_handler)(wifi_request_id id, wifi_interface_handle
                         iface, wifi_radio_mode_change_handler eh);
     wifi_error (*wifi_add_or_remove_virtual_intf)(wifi_interface_handle iface,
-- 
2.17.1

