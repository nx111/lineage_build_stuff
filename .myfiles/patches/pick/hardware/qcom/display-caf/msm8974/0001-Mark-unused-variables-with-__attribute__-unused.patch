From 30a6cb934ad3ccf400c1eb2168544b5a9a6204b3 Mon Sep 17 00:00:00 2001
From: Uwe Sauter <uwe.sauter.de@gmail.com>
Date: Sat, 27 Apr 2019 17:01:49 +0200
Subject: [PATCH] Mark unused variables with __attribute__((unused))

Change-Id: I2b875b859f8fe85fdf7d82a2656e3c76f576b466
---
 libcopybit/copybit_c2d.cpp    | 17 +++++++++--------
 libgralloc/ionalloc.cpp       |  3 ++-
 liboverlay/overlayMdp.cpp     |  2 +-
 liboverlay/overlayMdpRot.cpp  |  4 ++--
 liboverlay/overlayMdssRot.cpp |  2 +-
 5 files changed, 15 insertions(+), 13 deletions(-)

diff --git a/libcopybit/copybit_c2d.cpp b/libcopybit/copybit_c2d.cpp
index 2d9c20f79..8c0dd8587 100644
--- a/libcopybit/copybit_c2d.cpp
+++ b/libcopybit/copybit_c2d.cpp
@@ -1052,7 +1052,7 @@ static void delete_handle(private_handle_t *handle)
     }
 }
 
-static bool need_to_execute_draw(struct copybit_context_t* ctx,
+static bool need_to_execute_draw(__attribute__((unused)) struct copybit_context_t* ctx,
                                           eC2DFlags flags)
 {
     if (flags & FLAGS_TEMP_SRC_DST) {
@@ -1372,8 +1372,8 @@ static int stretch_copybit_internal(
     return status;
 }
 
-static int set_sync_copybit(struct copybit_device_t *dev,
-    int acquireFenceFd)
+static int set_sync_copybit(__attribute__((unused)) struct copybit_device_t *dev,
+                            __attribute__((unused)) int acquireFenceFd)
 {
     return 0;
 }
@@ -1414,10 +1414,10 @@ static int blit_copybit(
 }
 
 /** Fill the rect on dst with RGBA color **/
-static int fill_color(struct copybit_device_t *dev,
-                      struct copybit_image_t const *dst,
-                      struct copybit_rect_t const *rect,
-                      uint32_t color)
+static int fill_color(__attribute__((unused)) struct copybit_device_t *dev,
+                      __attribute__((unused)) struct copybit_image_t const *dst,
+                      __attribute__((unused)) struct copybit_rect_t const *rect,
+                      __attribute__((unused)) uint32_t color)
 {
     // TODO: Implement once c2d driver supports color fill
     return -EINVAL;
@@ -1483,7 +1483,8 @@ static int close_copybit(struct hw_device_t *dev)
 }
 
 /** Open a new instance of a copybit device using name */
-static int open_copybit(const struct hw_module_t* module, const char* name,
+static int open_copybit(const struct hw_module_t* module,
+                        __attribute__((unused)) const char* name,
                         struct hw_device_t** device)
 {
     int status = COPYBIT_SUCCESS;
diff --git a/libgralloc/ionalloc.cpp b/libgralloc/ionalloc.cpp
index ae88a4733..08f8f9690 100644
--- a/libgralloc/ionalloc.cpp
+++ b/libgralloc/ionalloc.cpp
@@ -162,7 +162,8 @@ int IonAlloc::map_buffer(void **pBase, size_t size, int offset, int fd)
     return err;
 }
 
-int IonAlloc::unmap_buffer(void *base, size_t size, int offset)
+int IonAlloc::unmap_buffer(void *base, size_t size,
+                           __attribute__((unused)) int offset)
 {
     ALOGD_IF(DEBUG, "ion: Unmapping buffer  base:%p size:%d", base, size);
     int err = 0;
diff --git a/liboverlay/overlayMdp.cpp b/liboverlay/overlayMdp.cpp
index f83664ecb..411c42ffc 100644
--- a/liboverlay/overlayMdp.cpp
+++ b/liboverlay/overlayMdp.cpp
@@ -265,7 +265,7 @@ void MdpCtrl3D::dump() const {
     ALOGE("== Dump MdpCtrl end ==");
 }
 
-bool MdpCtrl::setVisualParams(const MetaData_t& data) {
+bool MdpCtrl::setVisualParams(__attribute__((unused)) const MetaData_t& data) {
     bool needUpdate = false;
 #ifdef USES_POST_PROCESSING
     /* calculate the data */
diff --git a/liboverlay/overlayMdpRot.cpp b/liboverlay/overlayMdpRot.cpp
index b6089fb4f..7a5155f91 100755
--- a/liboverlay/overlayMdpRot.cpp
+++ b/liboverlay/overlayMdpRot.cpp
@@ -113,11 +113,11 @@ void MdpRot::setSource(const overlay::utils::Whf& awhf) {
     mRotImgInfo.dst.height = whf.h;
 }
 
-void MdpRot::setCrop(const utils::Dim& crop) {
+void MdpRot::setCrop(__attribute__((unused)) const utils::Dim& crop) {
     // NO-OP for non-mdss rotator due to possible h/w limitations
 }
 
-bool MdpRot::isRotBufReusable(const utils::eMdpFlags& flags) {
+bool MdpRot::isRotBufReusable(__attribute__((unused)) const utils::eMdpFlags& flags) {
     return true;
 }
 
diff --git a/liboverlay/overlayMdssRot.cpp b/liboverlay/overlayMdssRot.cpp
index 2843f49e4..3949da139 100644
--- a/liboverlay/overlayMdssRot.cpp
+++ b/liboverlay/overlayMdssRot.cpp
@@ -114,7 +114,7 @@ void MdssRot::setCrop(const utils::Dim& crop) {
     mRotInfo.src_rect.h = crop.h;
 }
 
-void MdssRot::setDownscale(int ds) {}
+void MdssRot::setDownscale(__attribute__((unused)) int ds) {}
 
 void MdssRot::setFlags(const utils::eMdpFlags& flags) {
     mRotInfo.flags = flags;
-- 
2.17.1

