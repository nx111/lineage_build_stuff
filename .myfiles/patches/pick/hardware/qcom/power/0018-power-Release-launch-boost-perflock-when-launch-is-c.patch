From 0fea8b6df227ca313727a306b86822de2ebce2a2 Mon Sep 17 00:00:00 2001
From: tomascus <arbiter1000@gmail.com>
Date: Tue, 19 Feb 2019 17:15:58 +1100
Subject: [PATCH 18/18] power: Release launch boost perflock when launch is
 completed

Currently, the launch boost perflock is held for a fixed duration, either
specified in perfboostsconfig.xml for perf HAL platforms or hardcoded in the
powerHAL for non-perf HAL platforms.

Using a fixed duration for this perflock has two shortcomings:
* perflock can be held for too long, causing the CPU freq and other resources
  to be boosted for too long even if the application has finished launching,
  resulting in excessive battery drainage
* perflock can be held not long enough if it takes more than the timeout
  time to finish launch

The framework sends out a powerhint for both when launch starts and when
launch ends. The launch finish hint can be used to signal when to release the
perflock.

Reference: Wahoo power-libperfmgr

Change-Id: I405cc453c5f58d9fb2583b9c6017f3964a0ce024

# Conflicts:
#	power-8953.c
---
 power-660.c    | 30 ++++++++++++++++++++++++++----
 power-8084.c   | 34 +++++++++++++++++++++++++++++-----
 power-845.c    | 27 +++++++++++++++++++++++----
 power-8916.c   | 32 ++++++++++++++++++++++++++++----
 power-8937.c   | 30 ++++++++++++++++++++++++++----
 power-8953.c   | 31 +++++++++++++++++++++++++------
 power-8974.c   | 32 ++++++++++++++++++++++++++++----
 power-8992.c   | 32 ++++++++++++++++++++++++++++----
 power-8994.c   | 32 ++++++++++++++++++++++++++++----
 power-8996.c   | 27 +++++++++++++++++++++++----
 power-8998.c   | 27 +++++++++++++++++++++++----
 power-common.h |  1 +
 12 files changed, 288 insertions(+), 47 deletions(-)

diff --git a/power-660.c b/power-660.c
index f82efff..d704705 100644
--- a/power-660.c
+++ b/power-660.c
@@ -54,6 +54,7 @@
 
 #define MIN_VAL(X,Y) ((X>Y)?(Y):(X))
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 400; /* ms */
 
@@ -251,9 +252,31 @@ static void process_video_encode_hint(void *metadata)
     }
 }
 
-static void process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
-    perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
 }
 
 static void process_interaction_hint(void *data)
@@ -310,8 +333,7 @@ int power_hint_override(power_hint_t hint, void *data)
             process_interaction_hint(data);
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            process_activity_launch_hint(data);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-8084.c b/power-8084.c
index 52d80c3..1c3331c 100644
--- a/power-8084.c
+++ b/power-8084.c
@@ -178,7 +178,34 @@ static int resources_launch[] = {
 const int DEFAULT_INTERACTIVE_DURATION   =  200; /* ms */
 const int MIN_FLING_DURATION             = 1500; /* ms */
 const int MAX_INTERACTIVE_DURATION       = 5000; /* ms */
-const int LAUNCH_DURATION                = 2000; /* ms */
+const int MAX_LAUNCH_DURATION            = 5000; /* ms */
+
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, MAX_LAUNCH_DURATION,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
 
 int power_hint_override(power_hint_t hint, void *data)
 {
@@ -230,10 +257,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = LAUNCH_DURATION;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-845.c b/power-845.c
index 6e06ba9..9d9dd2c 100644
--- a/power-845.c
+++ b/power-845.c
@@ -52,11 +52,11 @@
 #include "performance.h"
 #include "power-common.h"
 
-#define CHECK_HANDLE(x) ((x)>0)
 #define NUM_PERF_MODES  3
 
 #define SYS_DISPLAY_PWR "/sys/kernel/hbtp/display_pwr"
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 100; /* ms */
 
@@ -193,12 +193,31 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-8916.c b/power-8916.c
index c355290..fe003e3 100644
--- a/power-8916.c
+++ b/power-8916.c
@@ -177,6 +177,33 @@ static int resources_launch[] = {
     0x4201
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -226,10 +253,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         case POWER_HINT_VIDEO_ENCODE: /* Do nothing for encode case */
             return HINT_HANDLED;
         case POWER_HINT_VIDEO_DECODE: /* Do nothing for decode case */
diff --git a/power-8937.c b/power-8937.c
index 75b8395..fb4643f 100644
--- a/power-8937.c
+++ b/power-8937.c
@@ -50,6 +50,7 @@
 #include "performance.h"
 #include "power-common.h"
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 500; /* ms */
 
@@ -196,9 +197,31 @@ static void process_video_encode_hint(void *metadata)
     }
 }
 
-static void process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
-    perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
 }
 
 static void process_interaction_hint(void *data)
@@ -253,8 +276,7 @@ int power_hint_override(power_hint_t hint, void *data)
             process_interaction_hint(data);
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            process_activity_launch_hint(data);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-8953.c b/power-8953.c
index 8482cea..9b66300 100644
--- a/power-8953.c
+++ b/power-8953.c
@@ -52,12 +52,12 @@
 #include "performance.h"
 #include "power-common.h"
 
+#define NUM_PERF_MODES  3
+
 static int display_fd;
 #define SYS_DISPLAY_PWR "/sys/kernel/hbtp/display_pwr"
 
-#define CHECK_HANDLE(x) ((x)>0)
-#define NUM_PERF_MODES  3
-
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 500; /* ms */
 
@@ -284,12 +284,31 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-8974.c b/power-8974.c
index 50df288..5ca7cf3 100644
--- a/power-8974.c
+++ b/power-8974.c
@@ -183,6 +183,33 @@ static int resources_launch[] = {
     CPU3_MIN_FREQ_TURBO_MAX
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -232,10 +259,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-8992.c b/power-8992.c
index c267628..2925ebe 100644
--- a/power-8992.c
+++ b/power-8992.c
@@ -206,6 +206,33 @@ static int resources_launch[] = {
     0x20C
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -255,10 +282,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         case POWER_HINT_VIDEO_ENCODE:
             process_video_encode_hint(data);
             return HINT_HANDLED;
diff --git a/power-8994.c b/power-8994.c
index 96f96f7..6669cda 100644
--- a/power-8994.c
+++ b/power-8994.c
@@ -214,6 +214,33 @@ static int resources_launch[] = {
     0x20C
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -263,10 +290,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         case POWER_HINT_VIDEO_ENCODE:
             process_video_encode_hint(data);
             return HINT_HANDLED;
diff --git a/power-8996.c b/power-8996.c
index ac0d0f5..dae575b 100644
--- a/power-8996.c
+++ b/power-8996.c
@@ -50,9 +50,9 @@
 #include "performance.h"
 #include "power-common.h"
 
-#define CHECK_HANDLE(x) ((x)>0)
 #define NUM_PERF_MODES  3
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 500; /* ms */
 
@@ -270,12 +270,31 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-8998.c b/power-8998.c
index 1a3151a..15d158a 100644
--- a/power-8998.c
+++ b/power-8998.c
@@ -51,9 +51,9 @@
 #include "performance.h"
 #include "power-common.h"
 
-#define CHECK_HANDLE(x) ((x)>0)
 #define NUM_PERF_MODES  3
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 400; /* ms */
 
@@ -266,12 +266,31 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+
+    // release lock early if launch has finished
+    if (!data) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-common.h b/power-common.h
index b16d766..4c63a1a 100644
--- a/power-common.h
+++ b/power-common.h
@@ -58,6 +58,7 @@ enum {
     PROFILE_BIAS_PERFORMANCE
 };
 
+#define CHECK_HANDLE(x) ((x)>0)
 #define UNUSED(x) UNUSED_ ## x __attribute__((__unused__))
 
 // Custom Lineage hints
-- 
2.17.1

