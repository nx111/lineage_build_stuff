From 0f2507a15a730c42ea4b770e56a6335fbfd51d62 Mon Sep 17 00:00:00 2001
From: tomascus <arbiter1000@gmail.com>
Date: Tue, 19 Feb 2019 17:15:58 +1100
Subject: [PATCH 16/17] power: Release launch boost perflock when launch is
 completed

Currently on perf HAL platforms, the launch boost perflock is held for
the fixed duration specified in perfboostsconfig.xml.

Using a fixed duration for this perflock has two shortcomings:
* perflock can be held for too long, causing the CPU freq and other resources
  to be boosted for too long even if the application has finished launching,
  resulting in excessive battery drainage
* perflock can be held for not long enough if it takes more than the timeout
  time to finish launch

The framework sends out a powerhint for when launch starts and when launch
finishes. The launch finish hint can therefore be used to signal when to
release the perflock.

Reference: Wahoo power-libperfmgr

Change-Id: I405cc453c5f58d9fb2583b9c6017f3964a0ce024

# Conflicts:
#	power-8953.c
---
 power-660.c    | 31 +++++++++++++++++++++++++++----
 power-8084.c   | 35 ++++++++++++++++++++++++++++++-----
 power-845.c    | 28 ++++++++++++++++++++++++----
 power-8916.c   | 33 +++++++++++++++++++++++++++++----
 power-8937.c   | 31 +++++++++++++++++++++++++++----
 power-8953.c   | 32 ++++++++++++++++++++++++++------
 power-8974.c   | 33 +++++++++++++++++++++++++++++----
 power-8992.c   | 33 +++++++++++++++++++++++++++++----
 power-8994.c   | 33 +++++++++++++++++++++++++++++----
 power-8996.c   | 28 ++++++++++++++++++++++++----
 power-8998.c   | 28 ++++++++++++++++++++++++----
 power-common.h |  1 +
 12 files changed, 299 insertions(+), 47 deletions(-)

diff --git a/power-660.c b/power-660.c
index a866b5b..26c2fd2 100644
--- a/power-660.c
+++ b/power-660.c
@@ -54,6 +54,7 @@
 
 #define MIN_VAL(X,Y) ((X>Y)?(Y):(X))
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 400; /* ms */
 
@@ -250,9 +251,32 @@ static void process_video_encode_hint(void *metadata)
     }
 }
 
-static void process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
-    perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
 }
 
 static void process_interaction_hint(void *data)
@@ -309,8 +333,7 @@ int power_hint_override(power_hint_t hint, void *data)
             process_interaction_hint(data);
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            process_activity_launch_hint(data);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-8084.c b/power-8084.c
index 7d4bbe4..f0ae866 100644
--- a/power-8084.c
+++ b/power-8084.c
@@ -177,7 +177,35 @@ static int resources_launch[] = {
 const int DEFAULT_INTERACTIVE_DURATION   =  200; /* ms */
 const int MIN_FLING_DURATION             = 1500; /* ms */
 const int MAX_INTERACTIVE_DURATION       = 5000; /* ms */
-const int LAUNCH_DURATION                = 2000; /* ms */
+const int MAX_LAUNCH_DURATION            = 5000; /* ms */
+
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, MAX_LAUNCH_DURATION,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
 
 int power_hint_override(power_hint_t hint, void *data)
 {
@@ -229,10 +257,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = LAUNCH_DURATION;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-845.c b/power-845.c
index 8b7fe54..82133d8 100644
--- a/power-845.c
+++ b/power-845.c
@@ -52,11 +52,11 @@
 #include "performance.h"
 #include "power-common.h"
 
-#define CHECK_HANDLE(x) ((x)>0)
 #define NUM_PERF_MODES  3
 
 #define SYS_DISPLAY_PWR "/sys/kernel/hbtp/display_pwr"
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 100; /* ms */
 
@@ -193,12 +193,32 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-8916.c b/power-8916.c
index 204d016..1429195 100644
--- a/power-8916.c
+++ b/power-8916.c
@@ -176,6 +176,34 @@ static int resources_launch[] = {
     0x4201
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -225,10 +253,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         case POWER_HINT_VIDEO_ENCODE: /* Do nothing for encode case */
             return HINT_HANDLED;
         case POWER_HINT_VIDEO_DECODE: /* Do nothing for decode case */
diff --git a/power-8937.c b/power-8937.c
index da3d0e9..e3bc2fd 100644
--- a/power-8937.c
+++ b/power-8937.c
@@ -50,6 +50,7 @@
 #include "performance.h"
 #include "power-common.h"
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 500; /* ms */
 
@@ -195,9 +196,32 @@ static void process_video_encode_hint(void *metadata)
     }
 }
 
-static void process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
-    perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
 }
 
 static void process_interaction_hint(void *data)
@@ -252,8 +276,7 @@ int power_hint_override(power_hint_t hint, void *data)
             process_interaction_hint(data);
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            process_activity_launch_hint(data);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-8953.c b/power-8953.c
index bd9211c..0f10320 100644
--- a/power-8953.c
+++ b/power-8953.c
@@ -52,12 +52,12 @@
 #include "performance.h"
 #include "power-common.h"
 
+#define NUM_PERF_MODES  3
+
 static int display_fd;
 #define SYS_DISPLAY_PWR "/sys/kernel/hbtp/display_pwr"
 
-#define CHECK_HANDLE(x) ((x)>0)
-#define NUM_PERF_MODES  3
-
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 500; /* ms */
 
@@ -283,12 +283,32 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-8974.c b/power-8974.c
index 94d4125..7f78a31 100644
--- a/power-8974.c
+++ b/power-8974.c
@@ -182,6 +182,34 @@ static int resources_launch[] = {
     CPU3_MIN_FREQ_TURBO_MAX
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -231,10 +259,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         default:
             break;
     }
diff --git a/power-8992.c b/power-8992.c
index b6c3413..e82b975 100644
--- a/power-8992.c
+++ b/power-8992.c
@@ -205,6 +205,34 @@ static int resources_launch[] = {
     0x20C
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -254,10 +282,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         case POWER_HINT_VIDEO_ENCODE:
             process_video_encode_hint(data);
             return HINT_HANDLED;
diff --git a/power-8994.c b/power-8994.c
index f56a873..c2d6eea 100644
--- a/power-8994.c
+++ b/power-8994.c
@@ -213,6 +213,34 @@ static int resources_launch[] = {
     0x20C
 };
 
+static int process_activity_launch_hint(void *data)
+{
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
+    if (!launch_mode) {
+        launch_handle = interaction_with_handle(launch_handle, 5000,
+                ARRAY_SIZE(resources_launch), resources_launch);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
+    }
+    return HINT_HANDLED;
+}
+
 int power_hint_override(power_hint_t hint, void *data)
 {
     static struct timespec s_previous_boost_timespec;
@@ -262,10 +290,7 @@ int power_hint_override(power_hint_t hint, void *data)
             }
             return HINT_HANDLED;
         case POWER_HINT_LAUNCH:
-            duration = 2000;
-            interaction(duration, ARRAY_SIZE(resources_launch),
-                    resources_launch);
-            return HINT_HANDLED;
+            return process_activity_launch_hint(data);
         case POWER_HINT_VIDEO_ENCODE:
             process_video_encode_hint(data);
             return HINT_HANDLED;
diff --git a/power-8996.c b/power-8996.c
index 38ca714..8422bc7 100644
--- a/power-8996.c
+++ b/power-8996.c
@@ -50,9 +50,9 @@
 #include "performance.h"
 #include "power-common.h"
 
-#define CHECK_HANDLE(x) ((x)>0)
 #define NUM_PERF_MODES  3
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 500; /* ms */
 
@@ -269,12 +269,32 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-8998.c b/power-8998.c
index 123c179..cb0fcc5 100644
--- a/power-8998.c
+++ b/power-8998.c
@@ -51,9 +51,9 @@
 #include "performance.h"
 #include "power-common.h"
 
-#define CHECK_HANDLE(x) ((x)>0)
 #define NUM_PERF_MODES  3
 
+const int kMaxLaunchDuration = 5000; /* ms */
 const int kMaxInteractiveDuration = 5000; /* ms */
 const int kMinInteractiveDuration = 400; /* ms */
 
@@ -265,12 +265,32 @@ static int process_video_encode_hint(void *metadata)
     return HINT_NONE;
 }
 
-static int process_activity_launch_hint(void *UNUSED(data))
+static int process_activity_launch_hint(void *data)
 {
+    static int launch_handle = -1;
+    static int launch_mode = 0;
+    int state = *((int*)data);
+
+    // release lock early if launch has finished
+    if (!state) {
+        if (CHECK_HANDLE(launch_handle)) {
+            release_request(launch_handle);
+            launch_handle = -1;
+        }
+        launch_mode = 0;
+        return HINT_HANDLED;
+    }
+
     if (current_mode != NORMAL_MODE) {
         ALOGV("%s: ignoring due to other active perf hints", __func__);
-    } else {
-        perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST, -1, LAUNCH_BOOST_V1);
+    } else if (!launch_mode) {
+        launch_handle = perf_hint_enable_with_type(VENDOR_HINT_FIRST_LAUNCH_BOOST,
+                kMaxLaunchDuration, LAUNCH_BOOST_V1);
+        if (!CHECK_HANDLE(launch_handle)) {
+            ALOGE("Failed to perform launch boost");
+            return HINT_NONE;
+        }
+        launch_mode = 1;
     }
     return HINT_HANDLED;
 }
diff --git a/power-common.h b/power-common.h
index b16d766..4c63a1a 100644
--- a/power-common.h
+++ b/power-common.h
@@ -58,6 +58,7 @@ enum {
     PROFILE_BIAS_PERFORMANCE
 };
 
+#define CHECK_HANDLE(x) ((x)>0)
 #define UNUSED(x) UNUSED_ ## x __attribute__((__unused__))
 
 // Custom Lineage hints
-- 
2.17.1

