From e3b85eb472042eb5f28a92885cf4ff0ab2dbe01c Mon Sep 17 00:00:00 2001
From: Deevana Murthy Bandaru <dbandaru@codeaurora.org>
Date: Mon, 23 Jul 2018 15:11:37 +0530
Subject: [PATCH 12/14] power: Turn on/off display in SDM439

PowerHAL writes to a sysfs node when it gets display on/off
notification.

Change-Id: I90acbef41cc01d7712cbb23765f3d278cb3ee637
---
 power-8952.c | 47 ++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 46 insertions(+), 1 deletion(-)

diff --git a/power-8952.c b/power-8952.c
index a49c361..51d23eb 100644
--- a/power-8952.c
+++ b/power-8952.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2015, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2015,2018 The Linux Foundation. All rights reserved.
  * Copyright (C) 2018 The LineageOS Project
  *
  * Redistribution and use in source and binary forms, with or without
@@ -37,6 +37,7 @@
 #include <fcntl.h>
 #include <dlfcn.h>
 #include <stdlib.h>
+#include <unistd.h>
 
 #define LOG_TAG "QCOM PowerHAL"
 #include <log/log.h>
@@ -51,6 +52,9 @@
 
 static int video_encode_hint_sent;
 
+static int display_fd;
+#define SYS_DISPLAY_PWR "/sys/kernel/hbtp/display_pwr"
+
 static int current_power_profile = PROFILE_BALANCED;
 
 static int profile_high_performance[] = {
@@ -213,6 +217,13 @@ int power_hint_override(power_hint_t hint, void *data)
 int set_interactive_override(int on)
 {
     char governor[80];
+    int rc = 0;
+
+    static const char *display_on = "1";
+    static const char *display_off = "0";
+    char err_buf[80];
+    static int init_interactive_hint = 0;
+    static int set_i_count = 0;
 
     if (get_scaling_governor_check_cores(governor, sizeof(governor), CPU0) == -1) {
         if (get_scaling_governor_check_cores(governor, sizeof(governor), CPU1) == -1) {
@@ -242,5 +253,39 @@ int set_interactive_override(int on)
             undo_hint_action(DISPLAY_STATE_HINT_ID);
         }
     }
+
+    set_i_count ++;
+    ALOGI("Got set_interactive hint on= %d, count= %d\n", on, set_i_count);
+
+    if (init_interactive_hint == 0)
+    {
+        //First time the display is turned off
+        display_fd = TEMP_FAILURE_RETRY(open(SYS_DISPLAY_PWR, O_RDWR));
+        if (display_fd < 0) {
+            strerror_r(errno,err_buf,sizeof(err_buf));
+            ALOGE("Error opening %s: %s\n", SYS_DISPLAY_PWR, err_buf);
+            return HINT_HANDLED;
+        }
+        else
+            init_interactive_hint = 1;
+    }
+    else
+        if (!on ) {
+            /* Display off. */
+            rc = TEMP_FAILURE_RETRY(write(display_fd, display_off, strlen(display_off)));
+            if (rc < 0) {
+                strerror_r(errno,err_buf,sizeof(err_buf));
+                ALOGE("Error writing %s to  %s: %s\n", display_off, SYS_DISPLAY_PWR, err_buf);
+            }
+        }
+        else {
+            /* Display on */
+            rc = TEMP_FAILURE_RETRY(write(display_fd, display_on, strlen(display_on)));
+            if (rc < 0) {
+                strerror_r(errno,err_buf,sizeof(err_buf));
+                ALOGE("Error writing %s to  %s: %s\n", display_on, SYS_DISPLAY_PWR, err_buf);
+            }
+        }
+
     return HINT_HANDLED;
 }
-- 
2.17.1

