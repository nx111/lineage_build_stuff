From 9ad0de9737f3a9cbd81c5021471b457fabd10609 Mon Sep 17 00:00:00 2001
From: Paul Keith <javelinanddart@gmail.com>
Date: Thu, 7 Feb 2019 12:52:53 -0600
Subject: [PATCH] lineagehw: Deprecate sysfs + HWC2 display controls

* They have been moved into HIDL HALs and LineageHardwareManager, respectively
* Also fix some minor style issues

Change-Id: I29fe6223e287531964656fd8c10edc1718e2ec65
---
 .../lineageos/hardware/AdaptiveBacklight.java | 14 +--
 src/org/lineageos/hardware/AutoContrast.java  | 17 +---
 .../lineageos/hardware/ColorEnhancement.java  | 17 +---
 .../hardware/DisplayColorCalibration.java     | 99 +------------------
 .../hardware/HighTouchSensitivity.java        | 12 ++-
 .../hardware/ReadingEnhancement.java          | 87 +---------------
 .../hardware/SunlightEnhancement.java         | 34 +------
 7 files changed, 25 insertions(+), 255 deletions(-)

diff --git a/src/org/lineageos/hardware/AdaptiveBacklight.java b/src/org/lineageos/hardware/AdaptiveBacklight.java
index 1a78c6d..a5433f1 100644
--- a/src/org/lineageos/hardware/AdaptiveBacklight.java
+++ b/src/org/lineageos/hardware/AdaptiveBacklight.java
@@ -17,27 +17,19 @@
 
 package org.lineageos.hardware;
 
-import android.util.Log;
-
-import org.lineageos.internal.util.FileUtils;
-
 /**
  * Adaptive backlight support (this refers to technologies like NVIDIA SmartDimmer,
  * QCOM CABL or Samsung CABC).
  */
 public class AdaptiveBacklight {
 
-    private static final String TAG = "AdaptiveBacklight";
-
-    private static final String FILE_CABC = "/sys/class/graphics/fb0/cabc";
-
     /**
      * Whether device supports an adaptive backlight technology.
      *
      * @return boolean Supported devices must return always true
      */
     public static boolean isSupported() {
-        return FileUtils.isFileReadable(FILE_CABC) && FileUtils.isFileWritable(FILE_CABC);
+        return false;
     }
 
     /**
@@ -47,7 +39,7 @@ public class AdaptiveBacklight {
      * the operation failed while reading the status; true in any other case.
      */
     public static boolean isEnabled() {
-        return Integer.parseInt(FileUtils.readOneLine(FILE_CABC)) > 0;
+        return false;
     }
 
     /**
@@ -58,6 +50,6 @@ public class AdaptiveBacklight {
      * failed; true in any other case.
      */
     public static boolean setEnabled(boolean status) {
-        return FileUtils.writeLine(FILE_CABC, status ? "1" : "0");
+        return false;
     }
 }
diff --git a/src/org/lineageos/hardware/AutoContrast.java b/src/org/lineageos/hardware/AutoContrast.java
index 8638d5d..1217426 100644
--- a/src/org/lineageos/hardware/AutoContrast.java
+++ b/src/org/lineageos/hardware/AutoContrast.java
@@ -16,26 +16,18 @@
 
 package org.lineageos.hardware;
 
-import org.lineageos.internal.util.FileUtils;
-
-import android.util.Log;
-
 /**
  * Auto Contrast Optimization
  */
 public class AutoContrast {
 
-    private static final String TAG = "AutoContrast";
-
-    private static final String FILE_ACO = "/sys/class/graphics/fb0/aco";
-
     /**
      * Whether device supports ACO
      *
      * @return boolean Supported devices must return always true
      */
     public static boolean isSupported() {
-        return FileUtils.isFileReadable(FILE_ACO) && FileUtils.isFileWritable(FILE_ACO);
+        return false;
     }
 
     /**
@@ -45,11 +37,6 @@ public class AutoContrast {
      * the operation failed while reading the status; true in any other case.
      */
     public static boolean isEnabled() {
-        try {
-            return Integer.parseInt(FileUtils.readOneLine(FILE_ACO)) > 0;
-        } catch (Exception e) {
-            Log.e(TAG, e.getMessage(), e);
-        }
         return false;
     }
 
@@ -61,7 +48,7 @@ public class AutoContrast {
      * failed; true in any other case.
      */
     public static boolean setEnabled(boolean status) {
-        return FileUtils.writeLine(FILE_ACO, status ? "1" : "0");
+        return false;
     }
 
     /**
diff --git a/src/org/lineageos/hardware/ColorEnhancement.java b/src/org/lineageos/hardware/ColorEnhancement.java
index ba603a5..f0f9688 100644
--- a/src/org/lineageos/hardware/ColorEnhancement.java
+++ b/src/org/lineageos/hardware/ColorEnhancement.java
@@ -16,26 +16,18 @@
 
 package org.lineageos.hardware;
 
-import org.lineageos.internal.util.FileUtils;
-
-import android.util.Log;
-
 /**
  * Color enhancement support
  */
 public class ColorEnhancement {
 
-    private static final String TAG = "ColorEnhancement";
-
-    private static final String FILE_CE = "/sys/class/graphics/fb0/color_enhance";
-
     /**
      * Whether device supports an color enhancement technology.
      *
      * @return boolean Supported devices must return always true
      */
     public static boolean isSupported() {
-        return FileUtils.isFileReadable(FILE_CE) && FileUtils.isFileWritable(FILE_CE);
+        return false;
     }
 
     /**
@@ -45,11 +37,6 @@ public class ColorEnhancement {
      * the operation failed while reading the status; true in any other case.
      */
     public static boolean isEnabled() {
-        try {
-            return Integer.parseInt(FileUtils.readOneLine(FILE_CE)) > 0;
-        } catch (Exception e) {
-            Log.e(TAG, e.getMessage(), e);
-        }
         return false;
     }
 
@@ -61,6 +48,6 @@ public class ColorEnhancement {
      * failed; true in any other case.
      */
     public static boolean setEnabled(boolean status) {
-        return FileUtils.writeLine(FILE_CE, status ? "1" : "0");
+        return false;
     }
 }
diff --git a/src/org/lineageos/hardware/DisplayColorCalibration.java b/src/org/lineageos/hardware/DisplayColorCalibration.java
index 3f3f6cd..8d50b7f 100644
--- a/src/org/lineageos/hardware/DisplayColorCalibration.java
+++ b/src/org/lineageos/hardware/DisplayColorCalibration.java
@@ -17,66 +17,18 @@
 
 package org.lineageos.hardware;
 
-import android.app.ActivityThread;
-import android.os.IBinder;
-import android.os.Parcel;
-import android.os.RemoteException;
-import android.os.ServiceManager;
-import android.util.Slog;
-
-import com.android.server.LocalServices;
-import com.android.server.display.DisplayTransformManager;
-import static com.android.server.display.DisplayTransformManager.LEVEL_COLOR_MATRIX_NIGHT_DISPLAY;
-
-import org.lineageos.internal.util.FileUtils;
-
 public class DisplayColorCalibration {
 
-    private static final String TAG = "DisplayColorCalibration";
-
-    private static final String COLOR_FILE = "/sys/class/graphics/fb0/rgb";
-
-    private static final int LEVEL_COLOR_MATRIX_LIVEDISPLAY = LEVEL_COLOR_MATRIX_NIGHT_DISPLAY + 1;
-
-    private static final int MODE_UNSUPPORTED          = 0;
-    private static final int MODE_HWC2_COLOR_TRANSFORM = 1;
-    private static final int MODE_SYSFS_RGB            = 2;
-
-    private static final int sMode;
-
-    private static final int MIN = 255;
-    private static final int MAX = 32768;
-
-    private static final int[] sCurColors = new int[] { MAX, MAX, MAX };
-
-    private static DisplayTransformManager sDTMService;
-
-    static {
-        // Determine mode of operation.
-        // Order of priority is:
-        // 1) HWC2 color transform
-        // 2) sysfs rgb file
-        if (ActivityThread.currentApplication().getApplicationContext().getResources().getBoolean(
-                    com.android.internal.R.bool.config_setColorTransformAccelerated)) {
-            sMode = MODE_HWC2_COLOR_TRANSFORM;
-        } else if (FileUtils.isFileReadable(COLOR_FILE) &&
-                FileUtils.isFileWritable(COLOR_FILE)) {
-            sMode = MODE_SYSFS_RGB;
-        } else {
-            sMode = MODE_UNSUPPORTED;
-        }
-    }
-
     public static boolean isSupported() {
-        return sMode != MODE_UNSUPPORTED;
+        return false;
     }
 
     public static int getMaxValue()  {
-        return MAX;
+        return -1;
     }
 
     public static int getMinValue()  {
-        return MIN;
+        return -1;
     }
 
     public static int getDefValue() {
@@ -84,54 +36,11 @@ public class DisplayColorCalibration {
     }
 
     public static String getCurColors()  {
-        if (sMode == MODE_SYSFS_RGB) {
-            return FileUtils.readOneLine(COLOR_FILE);
-        }
-
-        return String.format("%d %d %d", sCurColors[0],
-                sCurColors[1], sCurColors[2]);
+        return null;
     }
 
     public static boolean setColors(String colors) {
-        if (sMode == MODE_SYSFS_RGB) {
-            return FileUtils.writeLine(COLOR_FILE, colors);
-        } else if (sMode == MODE_HWC2_COLOR_TRANSFORM) {
-            if (sDTMService == null) {
-                sDTMService = LocalServices.getService(DisplayTransformManager.class);
-                if (sDTMService == null) {
-                    return false;
-                }
-            }
-            sDTMService.setColorMatrix(LEVEL_COLOR_MATRIX_LIVEDISPLAY, toColorMatrix(colors));
-            return true;
-        }
         return false;
     }
 
-    private static float[] toColorMatrix(String rgbString) {
-        String[] adj = rgbString == null ? null : rgbString.split(" ");
-
-        if (adj == null || adj.length != 3) {
-            return null;
-        }
-
-        float[] mat = new float[16];
-
-        // sanity check
-        for (int i = 0; i < 3; i++) {
-            int v = Integer.parseInt(adj[i]);
-
-            if (v >= MAX) {
-                v = MAX;
-            } else if (v < MIN) {
-                v = MIN;
-            }
-
-            mat[i * 5] = (float)v / (float)MAX;
-            sCurColors[i] = v;
-        }
-
-        mat[15] = 1.0f;
-        return mat;
-    }
 }
diff --git a/src/org/lineageos/hardware/HighTouchSensitivity.java b/src/org/lineageos/hardware/HighTouchSensitivity.java
index 2bfcd27..bb92b6d 100644
--- a/src/org/lineageos/hardware/HighTouchSensitivity.java
+++ b/src/org/lineageos/hardware/HighTouchSensitivity.java
@@ -26,7 +26,9 @@ public class HighTouchSensitivity {
      *
      * @return boolean Supported devices must return always true
      */
-    public static boolean isSupported() { return false; }
+    public static boolean isSupported() {
+        return false;
+    }
 
     /**
      * This method return the current activation status of high touch sensitivity
@@ -34,7 +36,9 @@ public class HighTouchSensitivity {
      * @return boolean Must be false if high touch sensitivity is not supported or not activated,
      * or the operation failed while reading the status; true in any other case.
      */
-    public static boolean isEnabled() { return false; }
+    public static boolean isEnabled() {
+        return false;
+    }
 
     /**
      * This method allows to setup high touch sensitivity status.
@@ -43,6 +47,8 @@ public class HighTouchSensitivity {
      * @return boolean Must be false if high touch sensitivity is not supported or the operation
      * failed; true in any other case.
      */
-    public static boolean setEnabled(boolean status) { return false; }
+    public static boolean setEnabled(boolean status) {
+        return false;
+    }
 
 }
diff --git a/src/org/lineageos/hardware/ReadingEnhancement.java b/src/org/lineageos/hardware/ReadingEnhancement.java
index 8a48699..f2baf30 100644
--- a/src/org/lineageos/hardware/ReadingEnhancement.java
+++ b/src/org/lineageos/hardware/ReadingEnhancement.java
@@ -16,79 +16,18 @@
 
 package org.lineageos.hardware;
 
-import android.app.ActivityThread;
-import android.os.IBinder;
-import android.os.Parcel;
-import android.os.RemoteException;
-import android.os.ServiceManager;
-import android.util.Log;
-
-import com.android.server.LocalServices;
-import com.android.server.display.DisplayTransformManager;
-import static com.android.server.display.DisplayTransformManager.LEVEL_COLOR_MATRIX_GRAYSCALE;
-
-import org.lineageos.internal.util.FileUtils;
-
 /**
  * Reader mode
  */
 public class ReadingEnhancement {
 
-    private static final String TAG = "ReadingEnhancement";
-
-    private static final String FILE_READING = "/sys/class/graphics/fb0/reading_mode";
-
-    private static final int LEVEL_COLOR_MATRIX_READING = LEVEL_COLOR_MATRIX_GRAYSCALE + 1;
-
-    private static final int MODE_UNSUPPORTED          = 0;
-    private static final int MODE_HWC2_COLOR_TRANSFORM = 1;
-    private static final int MODE_SYSFS_READING        = 2;
-
-    private static final int sMode;
-
-    private static boolean sEnabled;
-
-    /**
-     * Matrix and offset used for converting color to grayscale.
-     * Copied from com.android.server.accessibility.DisplayAdjustmentUtils.MATRIX_GRAYSCALE
-     */
-    private static final float[] MATRIX_GRAYSCALE = new float[] {
-        .2126f, .2126f, .2126f, 0,
-        .7152f, .7152f, .7152f, 0,
-        .0722f, .0722f, .0722f, 0,
-             0,      0,      0, 1
-    };
-
-    /** Full color matrix and offset */
-    private static final float[] MATRIX_NORMAL = new float[] {
-        1, 0, 0, 0,
-        0, 1, 0, 0,
-        0, 0, 1, 0,
-        0, 0, 0, 1
-    };
-
-    private static DisplayTransformManager sDTMService;
-
-    static {
-        // Determine mode of operation.
-        if (ActivityThread.currentApplication().getApplicationContext().getResources().getBoolean(
-                    com.android.internal.R.bool.config_setColorTransformAccelerated)) {
-            sMode = MODE_HWC2_COLOR_TRANSFORM;
-        } else if (FileUtils.isFileReadable(FILE_READING) &&
-                FileUtils.isFileWritable(FILE_READING)) {
-            sMode = MODE_SYSFS_READING;
-        } else {
-            sMode = MODE_UNSUPPORTED;
-        }
-    }
-
     /**
      * Whether device supports Reader Mode
      *
      * @return boolean Supported devices must return always true
      */
     public static boolean isSupported() {
-        return sMode != MODE_UNSUPPORTED;
+        return false;
     }
 
     /**
@@ -98,15 +37,7 @@ public class ReadingEnhancement {
      * or the operation failed while reading the status; true in any other case.
      */
     public static boolean isEnabled() {
-        if (sMode == MODE_SYSFS_READING) {
-            try {
-                return Integer.parseInt(FileUtils.readOneLine(FILE_READING)) > 0;
-            } catch (Exception e) {
-                Log.e(TAG, e.getMessage(), e);
-            }
-        }
-
-        return sEnabled;
+        return false;
     }
 
     /**
@@ -117,20 +48,6 @@ public class ReadingEnhancement {
      * failed; true in any other case.
      */
     public static boolean setEnabled(boolean status) {
-        if (sMode == MODE_SYSFS_READING) {
-            return FileUtils.writeLine(FILE_READING, status ? "1" : "0");
-        } else if (sMode == MODE_HWC2_COLOR_TRANSFORM) {
-            if (sDTMService == null) {
-                sDTMService = LocalServices.getService(DisplayTransformManager.class);
-                if (sDTMService == null) {
-                    return false;
-                }
-            }
-            sDTMService.setColorMatrix(LEVEL_COLOR_MATRIX_READING,
-                    status ? MATRIX_GRAYSCALE : MATRIX_NORMAL);
-            sEnabled = status;
-            return true;
-        }
         return false;
     }
 
diff --git a/src/org/lineageos/hardware/SunlightEnhancement.java b/src/org/lineageos/hardware/SunlightEnhancement.java
index 9a1578b..9bcdbc3 100644
--- a/src/org/lineageos/hardware/SunlightEnhancement.java
+++ b/src/org/lineageos/hardware/SunlightEnhancement.java
@@ -17,46 +17,18 @@
 
 package org.lineageos.hardware;
 
-import android.util.Log;
-
-import org.lineageos.internal.util.FileUtils;
-
 /**
  * Facemelt mode!
  */
 public class SunlightEnhancement {
 
-    private static final String TAG = "SunlightEnhancement";
-
-    private static final String FACEMELT_PATH = getFacemeltPath();
-    private static final String FACEMELT_MODE = getFacemeltMode();
-
-    private static final String FILE_HBM = "/sys/class/graphics/fb0/hbm";
-    private static final String FILE_SRE = "/sys/class/graphics/fb0/sre";
-
-    private static String getFacemeltPath() {
-        if (FileUtils.fileExists(FILE_HBM)) {
-            return FILE_HBM;
-        } else {
-            return FILE_SRE;
-        }
-    }
-
-    private static String getFacemeltMode() {
-        if (FileUtils.fileExists(FILE_HBM)) {
-            return "1";
-        } else {
-            return "2";
-        }
-    }
-
     /**
      * Whether device supports sunlight enhancement
      *
      * @return boolean Supported devices must return always true
      */
     public static boolean isSupported() {
-        return FileUtils.isFileReadable(FACEMELT_PATH) && FileUtils.isFileWritable(FACEMELT_PATH);
+        return false;
     }
 
     /**
@@ -66,7 +38,7 @@ public class SunlightEnhancement {
      * or the operation failed while reading the status; true in any other case.
      */
     public static boolean isEnabled() {
-        return Integer.parseInt(FileUtils.readOneLine(FACEMELT_PATH)) > 0;
+        return false;
     }
 
     /**
@@ -77,7 +49,7 @@ public class SunlightEnhancement {
      * failed; true in any other case.
      */
     public static boolean setEnabled(boolean status) {
-        return FileUtils.writeLine(FACEMELT_PATH, status ? FACEMELT_MODE : "0");
+        return false;
     }
 
     /**
-- 
2.17.1

