From 118ffd42c0299dcf23e6049693cb36f6f09eb3d5 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Fri, 1 Mar 2019 11:21:40 +0100
Subject: [PATCH] Allow passing extra java arguments to proguard

Change-Id: I035786b209555700bd133fb4398859c1cd0ae892
---
 bin/proguard.sh | 30 +++++++++++++++++++++++++++---
 1 file changed, 27 insertions(+), 3 deletions(-)

diff --git a/bin/proguard.sh b/bin/proguard.sh
index dfc8b23..69c6dbe 100755
--- a/bin/proguard.sh
+++ b/bin/proguard.sh
@@ -21,6 +21,30 @@ fi
 
 PROGUARD_HOME=`dirname "$PROGUARD"`/..
 
-# BEGIN android-changed Added -Xmx2G for Mac builds
-java -Xmx2G -jar "$PROGUARD_HOME/lib/proguard.jar" "$@"
-# END android-changed
+# By default, give dx a max heap size of 2 gig. This can be overridden
+# by using a "-J" option (see below).
+defaultMx="-Xmx2G"
+
+# The following will extract any initial parameters of the form
+# "-J<stuff>" from the command line and pass them to the Java
+# invocation (instead of to dx). This makes it possible for you to add
+# a command-line parameter such as "-JXmx256M" in your scripts, for
+# example. "java" (with no args) and "java -X" give a summary of
+# available options.
+
+javaOpts=""
+
+while expr "x$1" : 'x-J' >/dev/null; do
+    opt=`expr "x$1" : 'x-J\(.*\)'`
+    javaOpts="${javaOpts} -${opt}"
+    if expr "x${opt}" : "xXmx[0-9]" >/dev/null; then
+        defaultMx="no"
+    fi
+    shift
+done
+
+if [ "${defaultMx}" != "no" ]; then
+    javaOpts="${javaOpts} ${defaultMx}"
+fi
+
+exec java $javaOpts -jar "$PROGUARD_HOME/lib/proguard.jar" "$@"
-- 
2.17.1

