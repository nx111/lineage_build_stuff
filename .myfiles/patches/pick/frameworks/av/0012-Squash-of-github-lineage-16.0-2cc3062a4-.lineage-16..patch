From fe2699c3353a4c51544238be9d50767776ae9d7d Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Tue, 5 Feb 2019 09:36:25 +0100
Subject: [PATCH 12/12] Squash of
 github/lineage-16.0(2cc3062a4)..lineage-16.0-android-9.0.0_r31(f95e9c6d3) (DO
 NOT SUBMIT)

Android Build Merger (Role) (5):
 - [automerger] CTS error while media dump() am: c20825bd3b
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738 am: ef7415221a
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738 am: ef7415221a am: 8cc5e57576
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738 am: ef7415221a am: 8cc5e57576 am: 2ab6f28542

Chong Zhang (7):
 - Fix race condition for cas sessions -- DO NOT MERGE
 - Fix race condition for cas sessions -- DO NOT MERGE
 - Fix race condition for cas sessions
 - [automerger skipped] Fix race condition for cas sessions -- DO NOT
   MERGE am: 58b9e7d73c  -s ours
 - Fix race condition for cas sessions -- DO NOT MERGE am: c927af1287
 - [automerger skipped] Fix race condition for cas sessions -- DO NOT
   MERGE am: c927af1287 am: ebbcb99ca1  -s ours
 - [automerger skipped] Fix race condition for cas sessions -- DO NOT
   MERGE am: c927af1287 am: ebbcb99ca1  -s ours am: c61b35c29b  -s ours

Emilian Peev (1):
 - Camera: Don't drop preview buffers during video

Kevin Rocard (1):
 - Effect config parser: fix use after free on file path

Luca Stefani (1):
 - Merge tag 'android-9.0.0_r31' into lineage-16.0-android-9.0.0_r31

Nobuaki Tanaka (1):
 - Support to play the various tones as per the Indian standard

Stanley Tng (1):
 - Add transaction code to TimeCheck crash

Sungtak Lee (1):
 - NuPlayer2CCDecoder: Add bound check before memcpy

TreeHugger Robot (1):
 - Merge "NuPlayer2CCDecoder: Add bound check before memcpy" into pi-dev

android-build-team Robot (5):
 - Snap for 5044688 from 4e028440dec2147e4150a94c74cba91864b72dc1 to
   pi-qpr2-release
 - Snap for 5066295 from 2fae5b7c8d457856f0896aafc61845ce5b209d4d to
   pi-qpr2-release
 - Snap for 5073521 from 70a12185ecb780a1cf523d28ed4128ae67b341bd to
   pi-qpr2-release
 - Snap for 5130385 from f20dd6b779d0e156dccabb6d56b769eb5d6f5f5c to
   pi-qpr2-release
 - Merge cherrypicks of [5656146, 5653357, 5656373, 5656227, 5656421,
   5654207, 5654208, 5654209, 5654210, 5656164, 5656412, 5656413,
   5656355, 5656356, 5656357, 5655631, 5655632, 5656165, 5656166,
   5656167, 5656168, 5656376, 5656422, 5656147, 5656148, 5656149] into
   pi-qpr2-release

ray-cy.lee (4):
 - CTS error while media dump()
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738 am: ef7415221a am: 8cc5e57576 am: 2ab6f28542 am:
   cf264f7d64
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738 am: ef7415221a am: 8cc5e57576 am: 2ab6f28542 am:
   cf264f7d64 am: 093bba3a2e
 - [automerger] CTS error while media dump() am: c20825bd3b am:
   8a530ca738 am: ef7415221a am: 8cc5e57576 am: 2ab6f28542 am:
   cf264f7d64 am: 093bba3a2e am: fea6cc13b0

Change-Id: I66b04c8001d22362b95caa5a103574fe1f50baee

Change-Id: I322415a306b60bde959bb804bf93a56c5a47dde1
---
 media/libaudioclient/IAudioFlinger.cpp        |  4 +-
 media/libaudioclient/IAudioPolicyService.cpp  |  4 +-
 media/libaudioclient/ToneGenerator.cpp        | 40 +++++++++++++++++++
 .../include/media/ToneGenerator.h             |  7 ++++
 .../api1/client2/CaptureSequencer.cpp         |  4 +-
 5 files changed, 56 insertions(+), 3 deletions(-)

diff --git a/media/libaudioclient/IAudioFlinger.cpp b/media/libaudioclient/IAudioFlinger.cpp
index 00af7e8ea..9f3b74241 100644
--- a/media/libaudioclient/IAudioFlinger.cpp
+++ b/media/libaudioclient/IAudioFlinger.cpp
@@ -951,7 +951,9 @@ status_t BnAudioFlinger::onTransact(
             break;
     }
 
-    TimeCheck check("IAudioFlinger");
+    char timeCheckString[64];
+    snprintf(timeCheckString, sizeof(timeCheckString), "IAudioFlinger: %d", code);
+    TimeCheck check(timeCheckString);
 
     switch (code) {
         case CREATE_TRACK: {
diff --git a/media/libaudioclient/IAudioPolicyService.cpp b/media/libaudioclient/IAudioPolicyService.cpp
index 3bc06ef67..f1a96be2c 100644
--- a/media/libaudioclient/IAudioPolicyService.cpp
+++ b/media/libaudioclient/IAudioPolicyService.cpp
@@ -972,7 +972,9 @@ status_t BnAudioPolicyService::onTransact(
             break;
     }
 
-    TimeCheck check("IAudioPolicyService");
+    char timeCheckString[64];
+    snprintf(timeCheckString, sizeof(timeCheckString), "IAudioPolicyService: %d", code);
+    TimeCheck check(timeCheckString);
 
     switch (code) {
         case SET_DEVICE_CONNECTION_STATE: {
diff --git a/media/libaudioclient/ToneGenerator.cpp b/media/libaudioclient/ToneGenerator.cpp
index 57167275a..d846d7939 100644
--- a/media/libaudioclient/ToneGenerator.cpp
+++ b/media/libaudioclient/ToneGenerator.cpp
@@ -826,6 +826,34 @@ const ToneGenerator::ToneDescriptor ToneGenerator::sToneDescriptors[] = {
                         { .duration = 0 , .waveFreq = { 0 }, 0, 0}},
           .repeatCnt = ToneGenerator::TONEGEN_INF,
           .repeatSegment = 0 },                              // TONE_IE_CALL_WAITING
+        { .segments = { { .duration = ToneGenerator::TONEGEN_INF, .waveFreq = { 375, 400, 425, 0 }, 0, 0 },
+                        { .duration = 0 , .waveFreq = { 0 }, 0, 0}},
+          .repeatCnt = ToneGenerator::TONEGEN_INF,
+          .repeatSegment = 0 },                              // TONE_INDIA_DIAL
+        { .segments = { { .duration = 750, .waveFreq = { 400, 0 }, 0, 0 },
+                      { .duration = 750, .waveFreq = { 0 }, 0, 0 },
+                      { .duration = 0 , .waveFreq = { 0 }, 0, 0}},
+          .repeatCnt = ToneGenerator::TONEGEN_INF,
+          .repeatSegment = 0 },                               // TONE_INDIA_BUSY
+        { .segments = { { .duration = 250, .waveFreq = { 400, 0 }, 0, 0 },
+                        { .duration = 250, .waveFreq = { 0 }, 0, 0 },
+                        { .duration = 0 , .waveFreq = { 0 }, 0, 0}},
+          .repeatCnt = ToneGenerator::TONEGEN_INF,
+          .repeatSegment = 0 },                              // TONE_INDIA_CONGESTION
+        { .segments = { { .duration = 200, .waveFreq = { 400, 0 }, 0, 0 },
+                        { .duration = 100, .waveFreq = { 0 }, 0, 0 },
+                        { .duration = 200, .waveFreq = { 400, 0 }, 0, 0 },
+                        { .duration = 7500, .waveFreq = { 0 }, 0, 0 },
+                        { .duration = 0 , .waveFreq = { 0 }, 0, 0}},
+          .repeatCnt = ToneGenerator::TONEGEN_INF,
+          .repeatSegment = 0 },                              // TONE_INDIA_CALL_WAITING
+        { .segments = { { .duration = 400, .waveFreq = { 375, 400, 425, 0 }, 0, 0 },
+                      { .duration = 200, .waveFreq = { 0 }, 0, 0 },
+                      { .duration = 400, .waveFreq = { 375, 400, 425, 0 }, 0, 0 },
+                      { .duration = 2000, .waveFreq = { 0 }, 0, 0 },
+                      { .duration = 0 , .waveFreq = { 0 }, 0, 0}},
+          .repeatCnt = ToneGenerator::TONEGEN_INF,
+          .repeatSegment = 0 },                               // TONE_INDIA_RINGTONE
 };
 
 // Used by ToneGenerator::getToneForRegion() to convert user specified supervisory tone type
@@ -900,6 +928,16 @@ const unsigned char /*tone_type*/ ToneGenerator::sToneMappingTable[NUM_REGIONS-1
             TONE_SUP_ERROR,              // TONE_SUP_ERROR
             TONE_IE_CALL_WAITING,        // TONE_SUP_CALL_WAITING
             TONE_IE_RINGTONE             // TONE_SUP_RINGTONE
+        },
+        {   // INDIA
+            TONE_INDIA_DIAL,             // TONE_SUP_DIAL
+            TONE_INDIA_BUSY,             // TONE_SUP_BUSY
+            TONE_INDIA_CONGESTION,       // TONE_SUP_CONGESTION
+            TONE_SUP_RADIO_ACK,          // TONE_SUP_RADIO_ACK
+            TONE_SUP_RADIO_NOTAVAIL,     // TONE_SUP_RADIO_NOTAVAIL
+            TONE_SUP_ERROR,              // TONE_SUP_ERROR
+            TONE_INDIA_CALL_WAITING,     // TONE_SUP_CALL_WAITING
+            TONE_INDIA_RINGTONE          // TONE_SUP_RINGTONE
         }
 };
 
@@ -971,6 +1009,8 @@ ToneGenerator::ToneGenerator(audio_stream_type_t streamType, float volume, bool
         mRegion = HONGKONG;
     } else if (strstr(value, "ie") != NULL) {
         mRegion = IRELAND;
+    } else if (strstr(value, "in") != NULL) {
+        mRegion = INDIA;
     } else {
         mRegion = CEPT;
     }
diff --git a/media/libaudioclient/include/media/ToneGenerator.h b/media/libaudioclient/include/media/ToneGenerator.h
index 247703fe9..7ae6aa67a 100644
--- a/media/libaudioclient/include/media/ToneGenerator.h
+++ b/media/libaudioclient/include/media/ToneGenerator.h
@@ -212,6 +212,12 @@ private:
         // IRELAND Supervisory tones
         TONE_IE_RINGTONE,           // Ring Tone: A 400Hz + 450Hz tone repeated in a 0.4s on, 0.2s off, 0.4s on, 2.0s off pattern.
         TONE_IE_CALL_WAITING,       // Call waiting tone: 425Hz tone repeated in a 0.18s on, 0.2s off, 0.2s on, 4.5s off pattern.
+        // INDIA supervisory tones
+        TONE_INDIA_DIAL,            // Dial tone: 400 Hz tone modulated with 25Hz, continuous
+        TONE_INDIA_BUSY,            // Busy tone: 400 Hz, 750ms ON, 750ms OFF...
+        TONE_INDIA_CONGESTION,      // Congestion tone: 400 Hz, 250ms ON, 250ms OFF...
+        TONE_INDIA_CALL_WAITING,    // Call waiting tone: 400 Hz, tone repeated in a 0.2s on, 0.1s off, 0.2s on, 7.5s off pattern.
+        TONE_INDIA_RINGTONE,        // Ring tone: 400 Hz tone modulated with 25Hz, 0.4 on 0.2 off 0.4 on 2..0 off
         NUM_ALTERNATE_TONES
     };
 
@@ -223,6 +229,7 @@ private:
         SINGAPORE,
         HONGKONG,
         IRELAND,
+        INDIA,
         CEPT,
         NUM_REGIONS
     };
diff --git a/services/camera/libcameraservice/api1/client2/CaptureSequencer.cpp b/services/camera/libcameraservice/api1/client2/CaptureSequencer.cpp
index 1ee216fd9..a9b2e7550 100644
--- a/services/camera/libcameraservice/api1/client2/CaptureSequencer.cpp
+++ b/services/camera/libcameraservice/api1/client2/CaptureSequencer.cpp
@@ -553,9 +553,11 @@ CaptureSequencer::CaptureState CaptureSequencer::manageStandardCapture(
         return DONE;
     }
 
-    if (l.mParameters.isDeviceZslSupported) {
+    if ((l.mParameters.isDeviceZslSupported) && (l.mParameters.state != Parameters::RECORD) &&
+            (l.mParameters.state != Parameters::VIDEO_SNAPSHOT)) {
         // If device ZSL is supported, drop all pending preview buffers to reduce the chance of
         // rendering preview frames newer than the still frame.
+        // Additionally, preview must not get interrupted during video recording.
         client->getCameraDevice()->dropStreamBuffers(true, client->getPreviewStreamId());
     }
 
-- 
2.17.1

