From d6ed56cfd591bc505ec27bafad2d473f70ff5e31 Mon Sep 17 00:00:00 2001
From: Arif Hussain <arifhussain@codeaurora.org>
Date: Tue, 16 Jan 2018 18:16:32 -0800
Subject: [PATCH] WiFi: Ignore connectivity scans during WFD session

Any scans will impact WiFi performance including WFD
performance. So during WFD session, ignore all connectivity
scans initiated internally by wifi work source.

This change will not impact any scan triggered due to user
activity and will allow those scans.

Change-Id: I6a855a8c4853a21fb0ff054c6a5155719ee12b3d
CRs-Fixed: 2136506
---
 .../server/wifi/WifiConnectivityManager.java  | 22 +++++++++++++++++++
 .../android/server/wifi/WifiStateMachine.java |  4 ++++
 .../server/wifi/p2p/WifiP2pServiceImpl.java   |  5 +++++
 3 files changed, 31 insertions(+)

diff --git a/service/java/com/android/server/wifi/WifiConnectivityManager.java b/service/java/com/android/server/wifi/WifiConnectivityManager.java
index 216c27cbb..24215617e 100644
--- a/service/java/com/android/server/wifi/WifiConnectivityManager.java
+++ b/service/java/com/android/server/wifi/WifiConnectivityManager.java
@@ -23,6 +23,7 @@ import static com.android.server.wifi.WifiStateMachine.WIFI_WORK_SOURCE;
 import android.app.AlarmManager;
 import android.content.Context;
 import android.content.pm.PackageManager;
+import android.net.wifi.p2p.WifiP2pManager;
 import android.net.wifi.ScanResult;
 import android.net.wifi.SupplicantState;
 import android.net.wifi.WifiConfiguration;
@@ -152,6 +153,7 @@ public class WifiConnectivityManager {
     private boolean mWifiEnabled = false;
     private boolean mWifiConnectivityManagerEnabled = true;
     private boolean mScreenOn = false;
+    private int mMiracastMode = WifiP2pManager.MIRACAST_DISABLED;
     private int mWifiState = WIFI_STATE_UNKNOWN;
     private boolean mUntrustedConnectionAllowed = false;
     private int mScanRestartCount = 0;
@@ -902,6 +904,17 @@ public class WifiConnectivityManager {
             return;
         }
 
+        // Any scans will impact Wifi performance including WFD performance,
+        // So at least ignore scans triggered internally by ConnectivityManager
+        // when WFD session is active. We still allow connectivity scans initiated
+        // by other work source.
+        if (WIFI_WORK_SOURCE.equals(workSource) &&
+                (mMiracastMode == WifiP2pManager.MIRACAST_SOURCE ||
+                mMiracastMode == WifiP2pManager.MIRACAST_SINK)) {
+            localLog("Ignore connectivity scan, MiracastMode:" + mMiracastMode);
+            return;
+        }
+
         mPnoScanListener.resetLowRssiNetworkRetryDelay();
 
         ScanSettings settings = new ScanSettings();
@@ -1098,6 +1111,15 @@ public class WifiConnectivityManager {
         startConnectivityScan(SCAN_ON_SCHEDULE);
     }
 
+    /**
+     * Save current miracast mode, it will be used to ignore
+     * connectivity scan during the time when miracast is enabled.
+     */
+    public void saveMiracastMode(int mode) {
+        localLog("saveMiracastMode: mode=" + mode);
+        mMiracastMode = mode;
+    }
+
     /**
      * Helper function that converts the WIFI_STATE_XXX constants to string
      */
diff --git a/service/java/com/android/server/wifi/WifiStateMachine.java b/service/java/com/android/server/wifi/WifiStateMachine.java
index 67b1ad6e7..d0f77d670 100644
--- a/service/java/com/android/server/wifi/WifiStateMachine.java
+++ b/service/java/com/android/server/wifi/WifiStateMachine.java
@@ -3431,6 +3431,10 @@ public class WifiStateMachine extends StateMachine {
                     mTemporarilyDisconnectWifi = (message.arg1 == 1);
                     replyToMessage(message, WifiP2pServiceImpl.DISCONNECT_WIFI_RESPONSE);
                     break;
+                case WifiP2pServiceImpl.SET_MIRACAST_MODE:
+                    if (mVerboseLoggingEnabled) logd("SET_MIRACAST_MODE: " + (int)message.arg1);
+                    mWifiConnectivityManager.saveMiracastMode((int)message.arg1);
+                    break;
                 /* Link configuration (IP address, DNS, ...) changes notified via netlink */
                 case CMD_UPDATE_LINKPROPERTIES:
                     updateLinkProperties((LinkProperties) message.obj);
diff --git a/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java b/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java
index c089c9c09..97815b160 100644
--- a/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java
+++ b/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java
@@ -585,6 +585,11 @@ public class WifiP2pServiceImpl extends IWifiP2pManager.Stub {
         enforceConnectivityInternalPermission();
         checkConfigureWifiDisplayPermission();
         mP2pStateMachine.sendMessage(SET_MIRACAST_MODE, mode);
+        if (mWifiChannel != null) {
+            mWifiChannel.sendMessage(WifiP2pServiceImpl.SET_MIRACAST_MODE, mode);
+        } else {
+            Log.e(TAG, "setMiracastMode(): WifiChannel is null");
+        }
     }
 
     @Override
-- 
2.17.1

