From 612351a8bc7e58b2eae3417a47f736fbec6a0717 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca020400@lineageos.org>
Date: Sat, 8 Jul 2017 17:41:49 +0200
Subject: [PATCH 22/42] CaffeineTile: Mimic old custom tile behavior

Change-Id: I5b00ab166b6798d0c5f6ddf06338ace2991f0cf8
---
 .../systemui/qs/tiles/CaffeineTile.java       | 89 ++-----------------
 1 file changed, 5 insertions(+), 84 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CaffeineTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CaffeineTile.java
index 4f6ad8ff745..8161fd59e8c 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CaffeineTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CaffeineTile.java
@@ -39,16 +39,6 @@ public class CaffeineTile extends QSTileImpl<BooleanState> {
     private final Icon mIcon = ResourceIcon.get(R.drawable.ic_qs_caffeine);
 
     private final PowerManager.WakeLock mWakeLock;
-    private int mSecondsRemaining;
-    private int mDuration;
-    private static int[] DURATIONS = new int[] {
-        5 * 60,   // 5 min
-        10 * 60,  // 10 min
-        30 * 60,  // 30 min
-        -1,       // infinity
-    };
-    private CountDownTimer mCountdownTimer = null;
-    public long mLastClickTime = -1;
     private final Receiver mReceiver = new Receiver();
 
     public CaffeineTile(QSHost host) {
@@ -66,7 +56,6 @@ public class CaffeineTile extends QSTileImpl<BooleanState> {
     @Override
     protected void handleDestroy() {
         super.handleDestroy();
-        stopCountDown();
         mReceiver.destroy();
         if (mWakeLock.isHeld()) {
             mWakeLock.release();
@@ -79,39 +68,11 @@ public class CaffeineTile extends QSTileImpl<BooleanState> {
 
     @Override
     public void handleClick() {
-        // If last user clicks < 5 seconds
-        // we cycle different duration
-        // otherwise toggle on/off
-        if (mWakeLock.isHeld() && (mLastClickTime != -1) &&
-                (SystemClock.elapsedRealtime() - mLastClickTime < 5000)) {
-            // cycle duration
-            mDuration++;
-            if (mDuration >= DURATIONS.length) {
-                // all durations cycled, turn if off
-                mDuration = -1;
-                stopCountDown();
-                if (mWakeLock.isHeld()) {
-                    mWakeLock.release();
-                }
-            } else {
-                // change duration
-                startCountDown(DURATIONS[mDuration]);
-                if (!mWakeLock.isHeld()) {
-                    mWakeLock.acquire();
-                }
-            }
+        if (mWakeLock.isHeld()) {
+            mWakeLock.release();
         } else {
-            // toggle
-            if (mWakeLock.isHeld()) {
-                mWakeLock.release();
-                stopCountDown();
-            } else {
-                mWakeLock.acquire();
-                mDuration = 0;
-                startCountDown(DURATIONS[mDuration]);
-            }
+            mWakeLock.acquire();
         }
-        mLastClickTime = SystemClock.elapsedRealtime();
         refreshState();
     }
 
@@ -134,44 +95,6 @@ public class CaffeineTile extends QSTileImpl<BooleanState> {
         return LineageMetricsLogger.TILE_CAFFEINE;
     }
 
-    private void startCountDown(long duration) {
-        stopCountDown();
-        mSecondsRemaining = (int)duration;
-        if (duration == -1) {
-            // infinity timing, no need to start timer
-            return;
-        }
-        mCountdownTimer = new CountDownTimer(duration * 1000, 1000) {
-            @Override
-            public void onTick(long millisUntilFinished) {
-                mSecondsRemaining = (int) (millisUntilFinished / 1000);
-                refreshState();
-            }
-
-            @Override
-            public void onFinish() {
-                if (mWakeLock.isHeld())
-                    mWakeLock.release();
-                refreshState();
-            }
-
-        }.start();
-    }
-
-    private void stopCountDown() {
-        if (mCountdownTimer != null) {
-            mCountdownTimer.cancel();
-            mCountdownTimer = null;
-        }
-    }
-
-    private String formatValueWithRemainingTime() {
-        if (mSecondsRemaining == -1) {
-            return "\u221E"; // infinity
-        }
-        return String.format("%02d:%02d",
-                        mSecondsRemaining / 60 % 60, mSecondsRemaining % 60);
-    }
 
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
@@ -179,12 +102,10 @@ public class CaffeineTile extends QSTileImpl<BooleanState> {
         state.icon = mIcon;
         state.label = mContext.getString(R.string.quick_settings_caffeine_label);
         if (state.value) {
-            state.secondaryLabel = formatValueWithRemainingTime();
             state.contentDescription =  mContext.getString(
                     R.string.accessibility_quick_settings_caffeine_on);
             state.state = Tile.STATE_ACTIVE;
         } else {
-            state.secondaryLabel = null;
             state.contentDescription =  mContext.getString(
                     R.string.accessibility_quick_settings_caffeine_off);
             state.state = Tile.STATE_INACTIVE;
@@ -208,9 +129,9 @@ public class CaffeineTile extends QSTileImpl<BooleanState> {
             String action = intent.getAction();
             if (Intent.ACTION_SCREEN_OFF.equals(action)) {
                 // disable caffeine if user force off (power button)
-                stopCountDown();
-                if (mWakeLock.isHeld())
+                if (mWakeLock.isHeld()) {
                     mWakeLock.release();
+                }
                 refreshState();
             }
         }
-- 
2.17.1

