From f2a0c3a3984d62c1afa2586a0a76f4cbb6f91ed3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?eray=20or=C3=A7unus?= <erayorcunus@gmail.com>
Date: Tue, 23 Apr 2019 16:46:35 +0300
Subject: [PATCH 27/42] SystemUI: Enable and fix QS detail view, adapt layout
 to Pie
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

* Re-enabling dual-target(detail view) was easy as pie, but layout was from Oreo
  and DND tile was broken.

* I've applied QS Customize layout to details view to match it with Pie look.

* DND showDetail function was overriden to show new EnableZenModeDialog.
  New dialog's implementation were taken from old detail view, so I've disabled
  the new one, added the only new thing (priority-but-alarm-disabled warning text)
  to old one and enabled it.

* DND tile will still respect "Ask duration every time" setting and ask duration to
  the user, but this time with detail view.

In addition;
---------
SystemUI: Enable dualTarget on CellularTile

* To show DataUsageDetailView

Change-Id: If09b4ac51bb6df01b8ea9f59bccf123de65da8cf
(Owner: Chengzhi Hou <hcz017@gmail.com> )
---------
SystemUI: CellularTile: Don't call showDetail() when device is locked

* We recently enabled dualTarget for CellularTile which allowed us
  to toggle mobile data without unlocking device. Moving showDetail
  call to postQSRunnableDismissingKeyguard when the device is locked
  fixes this issue.

Change-Id: I16dc766166a33a309a2fc945e81fa15b5d194196
(Owner: Łukasz Patron <priv.luk@gmail.com> )
---------
SystemUI: Fix Data Usage tile to match Settings

Change-Id: Ieff3504baf3d13c77d06fcde87d5ac56d2586194
(Owner: Paul Keith <javelinanddart@gmail.com>)
---------

Change-Id: I8c88a1c52294f2f72d78a3b5585de24a85f0b6df
Signed-off-by: eray orçunus <erayorcunus@gmail.com>
---
 .../res/drawable/qs_detail_background.xml     |  6 +-
 .../drawable/qs_detail_background_primary.xml | 21 +++++
 .../qs_detail_background_transition.xml       | 21 +++++
 .../res/drawable/qs_detail_toolbar.xml        | 23 ++++++
 packages/SystemUI/res/layout/qs_detail.xml    | 59 ++++++++------
 .../SystemUI/res/layout/qs_detail_buttons.xml |  9 +--
 .../SystemUI/res/layout/qs_detail_header.xml  |  8 +-
 .../SystemUI/res/layout/qs_detail_item.xml    |  4 +-
 .../SystemUI/res/layout/qs_detail_items.xml   |  1 +
 .../SystemUI/res/values-sw410dp/dimens.xml    | 24 ------
 packages/SystemUI/res/values/dimens.xml       |  2 +-
 packages/SystemUI/res/values/styles.xml       | 10 ++-
 .../src/com/android/systemui/qs/QSDetail.java |  3 +-
 .../systemui/qs/tileimpl/QSTileView.java      |  2 +-
 .../systemui/qs/tiles/CellularTile.java       | 10 +++
 .../qs/tiles/DataUsageDetailView.java         |  6 +-
 .../android/systemui/qs/tiles/DndTile.java    | 80 ++++++++++++-------
 .../statusbar/policy/ZenModeController.java   |  3 +-
 .../policy/ZenModeControllerImpl.java         |  6 ++
 .../android/systemui/volume/ZenModePanel.java |  9 ++-
 20 files changed, 201 insertions(+), 106 deletions(-)
 create mode 100644 packages/SystemUI/res/drawable/qs_detail_background_primary.xml
 create mode 100644 packages/SystemUI/res/drawable/qs_detail_background_transition.xml
 create mode 100644 packages/SystemUI/res/drawable/qs_detail_toolbar.xml
 delete mode 100644 packages/SystemUI/res/values-sw410dp/dimens.xml

diff --git a/packages/SystemUI/res/drawable/qs_detail_background.xml b/packages/SystemUI/res/drawable/qs_detail_background.xml
index 84c793f6abd..54de6fdf09e 100644
--- a/packages/SystemUI/res/drawable/qs_detail_background.xml
+++ b/packages/SystemUI/res/drawable/qs_detail_background.xml
@@ -14,6 +14,6 @@ Copyright (C) 2014 The Android Open Source Project
     limitations under the License.
 -->
 <transition xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@color/qs_detail_transition" />
-    <item android:drawable="?android:attr/colorPrimary" />
-</transition>
\ No newline at end of file
+    <item android:drawable="@drawable/qs_detail_background_transition" />
+    <item android:drawable="@drawable/qs_detail_background_primary" />
+</transition>
diff --git a/packages/SystemUI/res/drawable/qs_detail_background_primary.xml b/packages/SystemUI/res/drawable/qs_detail_background_primary.xml
new file mode 100644
index 00000000000..abe1429697a
--- /dev/null
+++ b/packages/SystemUI/res/drawable/qs_detail_background_primary.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<inset xmlns:android="http://schemas.android.com/apk/res/android">
+    <shape>
+        <solid android:color="?android:attr/colorPrimary"/>
+        <corners android:radius="?android:attr/dialogCornerRadius" />
+    </shape>
+</inset>
diff --git a/packages/SystemUI/res/drawable/qs_detail_background_transition.xml b/packages/SystemUI/res/drawable/qs_detail_background_transition.xml
new file mode 100644
index 00000000000..ed8f61a97c2
--- /dev/null
+++ b/packages/SystemUI/res/drawable/qs_detail_background_transition.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<inset xmlns:android="http://schemas.android.com/apk/res/android">
+    <shape>
+        <solid android:color="@color/qs_detail_transition"/>
+        <corners android:radius="?android:attr/dialogCornerRadius" />
+    </shape>
+</inset>
diff --git a/packages/SystemUI/res/drawable/qs_detail_toolbar.xml b/packages/SystemUI/res/drawable/qs_detail_toolbar.xml
new file mode 100644
index 00000000000..557cae15030
--- /dev/null
+++ b/packages/SystemUI/res/drawable/qs_detail_toolbar.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<inset xmlns:android="http://schemas.android.com/apk/res/android">
+    <shape>
+        <solid android:color="?android:attr/colorSecondary"/>
+        <corners
+            android:topLeftRadius="?android:attr/dialogCornerRadius"
+            android:topRightRadius="?android:attr/dialogCornerRadius" />
+    </shape>
+</inset>
diff --git a/packages/SystemUI/res/layout/qs_detail.xml b/packages/SystemUI/res/layout/qs_detail.xml
index 0b9a7b22610..dbe769017c8 100644
--- a/packages/SystemUI/res/layout/qs_detail.xml
+++ b/packages/SystemUI/res/layout/qs_detail.xml
@@ -19,42 +19,55 @@
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@drawable/qs_detail_background"
     android:clickable="true"
     android:orientation="vertical"
     android:paddingBottom="8dp"
     android:visibility="invisible"
     android:elevation="4dp" >
 
-    <include
-        android:id="@+id/qs_detail_header"
-        layout="@layout/qs_detail_header"
+    <View
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        />
+        android:layout_height="@*android:dimen/quick_qs_offset_height"
+        android:background="@android:color/transparent" />
 
-    <com.android.systemui.statusbar.AlphaOptimizedImageView
-        android:id="@+id/qs_detail_header_progress"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:alpha="0"
-        android:background="@color/qs_detail_progress_track"
-        android:src="@drawable/indeterminate_anim"
-        android:scaleType="fitXY"
-        />
-
-    <com.android.systemui.qs.NonInterceptingScrollView
+    <com.android.keyguard.AlphaOptimizedLinearLayout
+        android:id="@+id/detail_container"
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:layout_weight="1"
-        android:fillViewport="true">
+        android:orientation="vertical"
+        android:background="@drawable/qs_detail_background">
+
+        <include
+            android:id="@+id/qs_detail_header"
+            layout="@layout/qs_detail_header"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            />
 
-        <FrameLayout
-            android:id="@android:id/content"
+        <com.android.systemui.statusbar.AlphaOptimizedImageView
+            android:id="@+id/qs_detail_header_progress"
             android:layout_width="match_parent"
-            android:layout_height="match_parent"/>
-    </com.android.systemui.qs.NonInterceptingScrollView>
+            android:layout_height="wrap_content"
+            android:alpha="0"
+            android:background="@color/qs_detail_progress_track"
+            android:src="@drawable/indeterminate_anim"
+            android:scaleType="fitXY"
+            />
+
+        <com.android.systemui.qs.NonInterceptingScrollView
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="1"
+            android:fillViewport="true">
+
+            <FrameLayout
+                android:id="@android:id/content"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"/>
+        </com.android.systemui.qs.NonInterceptingScrollView>
 
-    <include layout="@layout/qs_detail_buttons" />
+        <include layout="@layout/qs_detail_buttons" />
+    </com.android.keyguard.AlphaOptimizedLinearLayout>
 
 </com.android.systemui.qs.QSDetail>
diff --git a/packages/SystemUI/res/layout/qs_detail_buttons.xml b/packages/SystemUI/res/layout/qs_detail_buttons.xml
index 75f43f9a580..f5930469c68 100644
--- a/packages/SystemUI/res/layout/qs_detail_buttons.xml
+++ b/packages/SystemUI/res/layout/qs_detail_buttons.xml
@@ -17,17 +17,16 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:paddingEnd="8dp"
-    android:gravity="end">
+    android:layout_marginEnd="@dimen/notification_guts_button_side_margin"
+    android:gravity="end"
+    android:orientation="horizontal">
 
     <TextView
         android:id="@android:id/button2"
         style="@style/QSBorderlessButton"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginEnd="8dp"
         android:minHeight="48dp"
-        android:minWidth="132dp"
         android:textAppearance="@style/TextAppearance.QS.DetailButton"
         android:focusable="true" />
 
@@ -37,7 +36,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:minHeight="48dp"
-        android:minWidth="88dp"
+        android:layout_marginStart="@dimen/notification_guts_button_horizontal_spacing"
         android:textAppearance="@style/TextAppearance.QS.DetailButton"
         android:focusable="true"/>
 
diff --git a/packages/SystemUI/res/layout/qs_detail_header.xml b/packages/SystemUI/res/layout/qs_detail_header.xml
index a1f0ee75c23..f3feda45547 100644
--- a/packages/SystemUI/res/layout/qs_detail_header.xml
+++ b/packages/SystemUI/res/layout/qs_detail_header.xml
@@ -19,17 +19,13 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:paddingLeft="@dimen/qs_detail_header_padding"
-    android:paddingTop="@dimen/qs_detail_header_padding"
+    android:paddingTop="@dimen/qs_detail_items_padding_top"
     android:paddingBottom="@dimen/qs_detail_items_padding_top"
     android:paddingEnd="@dimen/qs_panel_padding"
-    android:background="@drawable/btn_borderless_rect"
+    android:background="@drawable/qs_detail_toolbar"
     android:orientation="vertical"
     android:gravity="center">
 
-    <com.android.systemui.ResizingSpace
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/qs_detail_margin_top" />
-
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
diff --git a/packages/SystemUI/res/layout/qs_detail_item.xml b/packages/SystemUI/res/layout/qs_detail_item.xml
index 0844bb46d53..ad091c2f310 100644
--- a/packages/SystemUI/res/layout/qs_detail_item.xml
+++ b/packages/SystemUI/res/layout/qs_detail_item.xml
@@ -30,7 +30,7 @@
         android:layout_height="@dimen/qs_detail_item_icon_size"
         android:layout_marginStart="@dimen/qs_detail_item_icon_marginStart"
         android:layout_marginEnd="@dimen/qs_detail_item_icon_marginEnd"
-        android:tint="?android:attr/textColorPrimary"/>
+        android:tint="?android:attr/textColorSecondary"/>
 
     <LinearLayout
         android:layout_width="0dp"
@@ -65,6 +65,6 @@
         android:focusable="true"
         android:scaleType="center"
         android:contentDescription="@*android:string/media_route_controller_disconnect"
-        android:tint="?android:attr/textColorPrimary" />
+        android:tint="?android:attr/textColorSecondary" />
 
 </LinearLayout>
diff --git a/packages/SystemUI/res/layout/qs_detail_items.xml b/packages/SystemUI/res/layout/qs_detail_items.xml
index 60cba67cf3d..51efe6c89ba 100644
--- a/packages/SystemUI/res/layout/qs_detail_items.xml
+++ b/packages/SystemUI/res/layout/qs_detail_items.xml
@@ -20,6 +20,7 @@
     xmlns:sysui="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:paddingTop="8dp"
     android:paddingStart="@dimen/qs_detail_padding_start"
     android:paddingEnd="16dp">
 
diff --git a/packages/SystemUI/res/values-sw410dp/dimens.xml b/packages/SystemUI/res/values-sw410dp/dimens.xml
deleted file mode 100644
index 5ce65241c9c..00000000000
--- a/packages/SystemUI/res/values-sw410dp/dimens.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/*
-** Copyright 2016, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License"); 
-** you may not use this file except in compliance with the License. 
-** You may obtain a copy of the License at 
-**
-**     http://www.apache.org/licenses/LICENSE-2.0 
-**
-** Unless required by applicable law or agreed to in writing, software 
-** distributed under the License is distributed on an "AS IS" BASIS, 
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
-** See the License for the specific language governing permissions and 
-** limitations under the License.
-*/
--->
-
-<!-- These resources are around just to allow their values to be customized
-     for different hardware and product builds. -->
-<resources>
-    <dimen name="qs_detail_items_padding_top">16dp</dimen>
-</resources>
diff --git a/packages/SystemUI/res/values/dimens.xml b/packages/SystemUI/res/values/dimens.xml
index 68d9ce47ae6..daaab834e85 100644
--- a/packages/SystemUI/res/values/dimens.xml
+++ b/packages/SystemUI/res/values/dimens.xml
@@ -391,7 +391,7 @@
     <dimen name="qs_data_usage_usage_text_size">36sp</dimen>
     <dimen name="qs_battery_padding">2dp</dimen>
     <dimen name="qs_detail_padding_start">16dp</dimen>
-    <dimen name="qs_detail_items_padding_top">4dp</dimen>
+    <dimen name="qs_detail_items_padding_top">16dp</dimen>
     <dimen name="qs_detail_item_icon_size">24dp</dimen>
     <dimen name="qs_detail_item_icon_width">32dp</dimen>
     <dimen name="qs_detail_item_icon_marginStart">0dp</dimen>
diff --git a/packages/SystemUI/res/values/styles.xml b/packages/SystemUI/res/values/styles.xml
index e4f59892f79..78fe37888f5 100644
--- a/packages/SystemUI/res/values/styles.xml
+++ b/packages/SystemUI/res/values/styles.xml
@@ -212,6 +212,7 @@
 
     <style name="TextAppearance.QS.DetailHeader">
         <item name="android:textSize">@dimen/qs_detail_header_text_size</item>
+        <item name="android:textColor">?android:attr/colorAccent</item>
         <item name="android:fontFamily">sans-serif-medium</item>
     </style>
 
@@ -221,7 +222,7 @@
 
     <style name="TextAppearance.QS.DetailItemSecondary">
         <item name="android:textSize">@dimen/qs_detail_item_secondary_text_size</item>
-        <item name="android:textColor">?android:attr/colorAccent</item>
+        <item name="android:textColor">?android:attr/textColorSecondary</item>
     </style>
 
     <style name="TextAppearance.QS.Introduction">
@@ -236,10 +237,13 @@
 
     <style name="TextAppearance.QS.DetailButton">
         <item name="android:textSize">@dimen/qs_detail_button_text_size</item>
-        <item name="android:textColor">?android:attr/textColorSecondary</item>
-        <item name="android:textAllCaps">true</item>
+        <item name="android:textColor">?android:attr/colorAccent</item>
         <item name="android:fontFamily">sans-serif-medium</item>
         <item name="android:gravity">center</item>
+        <item name="android:paddingTop">@dimen/notification_guts_button_vertical_padding</item>
+        <item name="android:paddingBottom">@dimen/notification_guts_button_vertical_padding</item>
+        <item name="android:paddingLeft">@dimen/notification_guts_button_horizontal_padding</item>
+        <item name="android:paddingRight">@dimen/notification_guts_button_horizontal_padding</item>
     </style>
 
     <style name="TextAppearance.QS.DetailButton.White">
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java b/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java
index 8b434a54650..16a2bb8f6ab 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java
@@ -104,7 +104,7 @@ public class QSDetail extends LinearLayout {
 
         updateDetailText();
 
-        mClipper = new QSDetailClipper(this);
+        mClipper = new QSDetailClipper(findViewById(R.id.detail_container));
 
         final OnClickListener doneListener = new OnClickListener() {
             @Override
@@ -353,7 +353,6 @@ public class QSDetail extends LinearLayout {
             // Only hide content if still in detail state.
             if (mDetailAdapter != null) {
                 mQsPanel.setGridContentVisibility(false);
-                mHeader.setVisibility(View.INVISIBLE);
                 mFooter.setVisibility(View.INVISIBLE);
             }
             mAnimatingOpen = false;
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileView.java b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileView.java
index 91cd65259d7..5157534c554 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileView.java
@@ -37,7 +37,7 @@ import java.util.Objects;
 /** View that represents a standard quick settings tile. **/
 public class QSTileView extends QSTileBaseView {
     private static final int MAX_LABEL_LINES = 2;
-    private static final boolean DUAL_TARGET_ALLOWED = false;
+    private static final boolean DUAL_TARGET_ALLOWED = true;
     private View mDivider;
     protected TextView mLabel;
     protected TextView mSecondLine;
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
index fb4fcd43a3c..dbcfa73438b 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
@@ -147,7 +147,16 @@ public class CellularTile extends QSTileImpl<SignalState> {
 
     @Override
     protected void handleSecondaryClick() {
+        if (getState().state == Tile.STATE_UNAVAILABLE) {
+            return;
+        }
         if (mDataController.isMobileDataSupported()) {
+            if (mKeyguardMonitor.isSecure() && !mKeyguardMonitor.canSkipBouncer()) {
+                mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
+                    showDetail(true);
+                });
+                return;
+            }
             showDetail(true);
         } else {
             mActivityStarter
@@ -170,6 +179,7 @@ public class CellularTile extends QSTileImpl<SignalState> {
         final Resources r = mContext.getResources();
         state.activityIn = cb.enabled && cb.activityIn;
         state.activityOut = cb.enabled && cb.activityOut;
+        state.dualTarget = true;
         state.label = r.getString(R.string.mobile_data);
         boolean mobileDataEnabled = mDataController.isMobileDataSupported()
                 && mDataController.isMobileDataEnabled();
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java
index 7224ae6a1e1..d4e319ed57b 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java
@@ -38,9 +38,9 @@ import java.text.DecimalFormat;
  */
 public class DataUsageDetailView extends LinearLayout {
 
-    private static final double KB = 1024;
-    private static final double MB = 1024 * KB;
-    private static final double GB = 1024 * MB;
+    private static final double KB = 1000;
+    private static final double MB = 1000 * KB;
+    private static final double GB = 1000 * MB;
 
     private final DecimalFormat FORMAT = new DecimalFormat("#.##");
 
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
index 67900d93be9..3b1949e91c1 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
@@ -65,6 +65,10 @@ import com.android.systemui.volume.ZenModePanel;
 /** Quick settings tile: Do not disturb **/
 public class DndTile extends QSTileImpl<BooleanState> {
 
+    private static final int DONT_SHOW_DETAILS = 0;
+    private static final int SHOW_DETAILS_IF_DURATION_HAS_TO_BE_CHOSEN = 1;
+    private static final int SHOW_DETAILS = 2;
+
     private static final Intent ZEN_SETTINGS =
             new Intent(Settings.ACTION_ZEN_MODE_SETTINGS);
 
@@ -136,12 +140,11 @@ public class DndTile extends QSTileImpl<BooleanState> {
         if (mState.value) {
             mController.setZen(ZEN_MODE_OFF, null, TAG);
         } else {
-            showDetail(true);
+            turnOnDND(SHOW_DETAILS_IF_DURATION_HAS_TO_BE_CHOSEN);
         }
     }
 
-    @Override
-    public void showDetail(boolean show) {
+    public void turnOnDND(int showDetails) {
         int zenDuration = Settings.Global.getInt(mContext.getContentResolver(),
                 Settings.Global.ZEN_DURATION, 0);
         boolean showOnboarding = Settings.Global.getInt(mContext.getContentResolver(),
@@ -157,27 +160,51 @@ public class DndTile extends QSTileImpl<BooleanState> {
             intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
             Dependency.get(ActivityStarter.class).postStartActivityDismissingKeyguard(intent, 0);
         } else {
+            // Not using FAVORITE_ZEN for consistency. Pie has always used this mode since now.
+            int zen = Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS;
+
+            ZenModeController.Callback callback = new ZenModeController.Callback() {
+                @Override
+                public void onZenChanged(int zen) {
+                    mController.removeCallback(this);
+                    showDetail(true);
+                }
+            };
+
+            if (showDetails == SHOW_DETAILS) {
+                 mController.addCallback(callback);
+            }
+
             switch (zenDuration) {
                 case Settings.Global.ZEN_DURATION_PROMPT:
-                    mUiHandler.post(() -> {
-                        Dialog mDialog = new EnableZenModeDialog(mContext).createDialog();
-                        mDialog.getWindow().setType(
-                                WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
-                        SystemUIDialog.setShowForAllUsers(mDialog, true);
-                        SystemUIDialog.registerDismissListener(mDialog);
-                        SystemUIDialog.setWindowOnTop(mDialog);
-                        mUiHandler.post(() -> mDialog.show());
-                        mHost.collapsePanels();
-                    });
-                    break;
+                    if (showDetails == SHOW_DETAILS_IF_DURATION_HAS_TO_BE_CHOSEN) {
+                        mController.addCallback(callback);
+                    }
+                    mController.setZen(zen, null, TAG);
+
+                    /**
+                     * ZenModePanel (details panel) has exact same time conditions with new
+                     * EnableZenModeDialog. So we open detail panel instead above.
+                     *
+                     * mUiHandler.post(() -> {
+                     *     Dialog mDialog = new EnableZenModeDialog(mContext).createDialog();
+                     *     mDialog.getWindow().setType(
+                     *             WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
+                     *     SystemUIDialog.setShowForAllUsers(mDialog, true);
+                     *     SystemUIDialog.registerDismissListener(mDialog);
+                     *     SystemUIDialog.setWindowOnTop(mDialog);
+                     *     mUiHandler.post(() -> mDialog.show());
+                     *     mHost.collapsePanels();
+                     *  });
+                     */
+                     break;
                 case Settings.Global.ZEN_DURATION_FOREVER:
-                    mController.setZen(Settings.Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS, null, TAG);
+                    mController.setZen(zen, null, TAG);
                     break;
                 default:
                     Uri conditionId = ZenModeConfig.toTimeCondition(mContext, zenDuration,
                             ActivityManager.getCurrentUser(), true).id;
-                    mController.setZen(Settings.Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS,
-                            conditionId, TAG);
+                    mController.setZen(zen, conditionId, TAG);
             }
         }
     }
@@ -193,16 +220,7 @@ public class DndTile extends QSTileImpl<BooleanState> {
             return;
         }
         if (!mState.value) {
-            // Because of the complexity of the zen panel, it needs to be shown after
-            // we turn on zen below.
-            mController.addCallback(new ZenModeController.Callback() {
-                @Override
-                public void onZenChanged(int zen) {
-                    mController.removeCallback(this);
-                    showDetail(true);
-                }
-            });
-            mController.setZen(Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS, null, TAG);
+            turnOnDND(SHOW_DETAILS);
         } else {
             showDetail(true);
         }
@@ -216,6 +234,8 @@ public class DndTile extends QSTileImpl<BooleanState> {
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
         final int zen = arg instanceof Integer ? (Integer) arg : mController.getZen();
+        final ZenModeConfig zenConfig = arg instanceof ZenModeConfig ?
+                (ZenModeConfig) arg : mController.getConfig();
         final boolean newValue = zen != ZEN_MODE_OFF;
         final boolean valueChanged = state.value != newValue;
         if (state.slash == null) state.slash = new SlashState();
@@ -225,7 +245,7 @@ public class DndTile extends QSTileImpl<BooleanState> {
         state.slash.isSlashed = !state.value;
         state.label = getTileLabel();
         state.secondaryLabel = TextUtils.emptyIfNull(ZenModeConfig.getDescription(mContext,
-                zen != Global.ZEN_MODE_OFF, mController.getConfig(), false));
+                zen != Global.ZEN_MODE_OFF, zenConfig, false));
         state.icon = ResourceIcon.get(R.drawable.ic_qs_dnd_on);
         checkIfRestrictionEnforcedByAdminOnly(state, UserManager.DISALLOW_ADJUST_VOLUME);
         switch (zen) {
@@ -313,6 +333,7 @@ public class DndTile extends QSTileImpl<BooleanState> {
 
         @Override
         public void onConfigChanged(ZenModeConfig config) {
+            refreshState(config);
             if (isShowingDetail()) {
                 mDetailAdapter.updatePanel();
             }
@@ -355,7 +376,8 @@ public class DndTile extends QSTileImpl<BooleanState> {
                 mController.setZen(ZEN_MODE_OFF, null, TAG);
                 mAuto = false;
             } else {
-                mController.setZen(Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS, null, TAG);
+                // We're already in details view
+                turnOnDND(DONT_SHOW_DETAILS);
             }
         }
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeController.java
index 4ee80593452..ad2c163bec4 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeController.java
@@ -27,6 +27,7 @@ import com.android.systemui.statusbar.policy.ZenModeController.Callback;
 public interface ZenModeController extends CallbackController<Callback> {
     void setZen(int zen, Uri conditionId, String reason);
     int getZen();
+    boolean areAlarmsAllowedInPriority();
     ZenRule getManualRule();
     ZenModeConfig getConfig();
     long getNextAlarm();
@@ -47,4 +48,4 @@ public interface ZenModeController extends CallbackController<Callback> {
         default void onConfigChanged(ZenModeConfig config) {}
     }
 
-}
\ No newline at end of file
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java
index 59b376f311f..a814991e167 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java
@@ -131,6 +131,12 @@ public class ZenModeControllerImpl extends CurrentUserTracker implements ZenMode
         mNoMan.setZenMode(zen, conditionId, reason);
     }
 
+    @Override
+    public boolean areAlarmsAllowedInPriority() {
+        return (mNoMan.getNotificationPolicy().priorityCategories
+                & NotificationManager.Policy.PRIORITY_CATEGORY_ALARMS) != 0;
+    }
+
     @Override
     public boolean isZenAvailable() {
         return mSetupObserver.isDeviceProvisioned() && mSetupObserver.isUserSetup();
diff --git a/packages/SystemUI/src/com/android/systemui/volume/ZenModePanel.java b/packages/SystemUI/src/com/android/systemui/volume/ZenModePanel.java
index 7bb987ca7cf..d66e0e8624b 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/ZenModePanel.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/ZenModePanel.java
@@ -476,13 +476,16 @@ public class ZenModePanel extends FrameLayout {
             mConfigurableTexts.update();
             mZenIntroductionCustomize.setVisibility(zenImportant ? VISIBLE : GONE);
         }
-        final String warning = computeAlarmWarningText(zenNone);
+        final boolean allowAlarms = !zenNone &&
+                !(zenImportant && !mController.areAlarmsAllowedInPriority());
+        final String warning = computeAlarmWarningText(allowAlarms);
         mZenAlarmWarning.setVisibility(warning != null ? VISIBLE : GONE);
         mZenAlarmWarning.setText(warning);
     }
 
-    private String computeAlarmWarningText(boolean zenNone) {
-        if (!zenNone) {
+    private String computeAlarmWarningText(boolean allowAlarms) {
+        // don't show alarm warning if alarms are allowed to bypass dnd
+        if (allowAlarms) {
             return null;
         }
         final long now = System.currentTimeMillis();
-- 
2.17.1

