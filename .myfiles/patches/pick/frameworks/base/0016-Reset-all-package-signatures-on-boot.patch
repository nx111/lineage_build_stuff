From 070a4789b2bfff2e1459b03cd8e1e69f1b86a01c Mon Sep 17 00:00:00 2001
From: Sam Mortimer <sam@mortimer.me.uk>
Date: Tue, 10 Jan 2017 22:21:45 -0800
Subject: [PATCH 16/36] Reset all package signatures on boot

Can be used to make a special build that resets all
package signatures without wiping any data.

Change-Id: Iff65f2ed3c9d0f80be7221ff90803eda4732cac0
---
 .../android/server/pm/PackageManagerService.java  | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
index 9b50a1545a5..3a48cdf3434 100644
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -443,6 +443,8 @@ public class PackageManagerService extends IPackageManager.Stub
     private static final boolean ENABLE_FREE_CACHE_V2 =
             SystemProperties.getBoolean("fw.free_cache_v2", true);
 
+    private static final boolean RESET_ALL_PACKAGE_SIGNATURES_ON_BOOT = true;
+
     private static final int RADIO_UID = Process.PHONE_UID;
     private static final int LOG_UID = Process.LOG_UID;
     private static final int NFC_UID = Process.NFC_UID;
@@ -751,6 +753,7 @@ public class PackageManagerService extends IPackageManager.Stub
     final ArraySet<String> mLoadedVolumes = new ArraySet<>();
 
     boolean mFirstBoot;
+    boolean mResetSignatures;
 
     PackageManagerInternal.ExternalSourcesPolicy mExternalSourcesPolicy;
 
@@ -2635,6 +2638,8 @@ public class PackageManagerService extends IPackageManager.Stub
                 scanFlags = scanFlags | SCAN_FIRST_BOOT_OR_UPGRADE;
             }
 
+            mResetSignatures = RESET_ALL_PACKAGE_SIGNATURES_ON_BOOT;
+
             // Collect vendor/product overlay packages. (Do this before scanning any apps.)
             // For security and version matching reason, only consider
             // overlay packages if they reside in the right directory.
@@ -3031,6 +3036,8 @@ public class PackageManagerService extends IPackageManager.Stub
             }
             mExpectingBetter.clear();
 
+            mResetSignatures = false;
+
             // Resolve the storage manager.
             mStorageManagerPackage = getStorageManagerPackageName();
 
@@ -10315,7 +10322,13 @@ public class PackageManagerService extends IPackageManager.Stub
         }
 
         final KeySetManagerService ksms = mSettings.mKeySetManagerService;
-        if (ksms.shouldCheckUpgradeKeySetLocked(signatureCheckPs, scanFlags)) {
+        if (mResetSignatures) {
+            Slog.d(TAG, "resetting signatures on package " + pkg.packageName);
+            pkgSetting.signatures.mSigningDetails = pkg.mSigningDetails;
+            if (pkgSetting.sharedUser != null) {
+                pkgSetting.sharedUser.signatures.mSigningDetails = pkg.mSigningDetails;
+            }
+        } else if (ksms.shouldCheckUpgradeKeySetLocked(signatureCheckPs, scanFlags)) {
             if (ksms.checkUpgradeKeySetLocked(signatureCheckPs, pkg)) {
                 // We just determined the app is signed correctly, so bring
                 // over the latest parsed certs.
-- 
2.17.1

