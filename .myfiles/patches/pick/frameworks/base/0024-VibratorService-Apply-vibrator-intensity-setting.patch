From 5e0b1ff77d86262f24c34cbc75dc823a79bc6036 Mon Sep 17 00:00:00 2001
From: Danny Baumann <dannybaumann@web.de>
Date: Wed, 15 Aug 2018 11:58:40 +0200
Subject: [PATCH 24/34] VibratorService: Apply vibrator intensity setting.

Change-Id: I5329b802b9a45c0fb47251a333339d0791564b32
---
 .../com/android/server/VibratorService.java   | 20 ++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/VibratorService.java b/services/core/java/com/android/server/VibratorService.java
index 95e55182f82..45e4bdbdd83 100644
--- a/services/core/java/com/android/server/VibratorService.java
+++ b/services/core/java/com/android/server/VibratorService.java
@@ -62,6 +62,8 @@ import com.android.internal.app.IAppOpsService;
 import com.android.internal.app.IBatteryStats;
 import com.android.internal.util.DumpUtils;
 
+import lineageos.providers.LineageSettings;
+
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
 import java.util.ArrayList;
@@ -110,6 +112,7 @@ public class VibratorService extends IVibratorService.Stub
     private final boolean mAllowPriorityVibrationsInLowPowerMode;
     private final boolean mSupportsAmplitudeControl;
     private final int mDefaultVibrationAmplitude;
+    private float mVibrationIntensity;
     private final SparseArray<VibrationEffect> mFallbackEffects;
     private final WorkSource mTmpWorkSource = new WorkSource();
     private final Handler mH = new Handler();
@@ -397,6 +400,10 @@ public class VibratorService extends IVibratorService.Stub
                     Settings.System.getUriFor(Settings.System.NOTIFICATION_VIBRATION_INTENSITY),
                     true, mSettingObserver, UserHandle.USER_ALL);
 
+            mContext.getContentResolver().registerContentObserver(
+                    LineageSettings.Secure.getUriFor(LineageSettings.Secure.VIBRATOR_INTENSITY),
+                    true, mSettingObserver, UserHandle.USER_ALL);
+
             mContext.registerReceiver(new BroadcastReceiver() {
                 @Override
                 public void onReceive(Context context, Intent intent) {
@@ -821,6 +828,11 @@ public class VibratorService extends IVibratorService.Stub
             boolean lowPowerModeUpdated = updateLowPowerModeLocked();
             updateVibrationIntensityLocked();
 
+            mVibrationIntensity = LineageSettings.Secure.getFloatForUser(
+                    mContext.getContentResolver(),
+                    LineageSettings.Secure.VIBRATOR_INTENSITY, 255.0f,
+                    UserHandle.USER_CURRENT) / 255.0f;
+
             if (devicesUpdated || lowPowerModeUpdated) {
                 // If the state changes out from under us then just reset.
                 doCancelVibrateLocked();
@@ -949,7 +961,12 @@ public class VibratorService extends IVibratorService.Stub
 
     private void doVibratorSetAmplitude(int amplitude) {
         if (mSupportsAmplitudeControl) {
-            vibratorSetAmplitude(amplitude);
+            int finalAmplitude = (int) ((float) amplitude * mVibrationIntensity);
+            if (DEBUG) {
+                Slog.d(TAG, "Set vibrator intensity: amplitude " + amplitude +
+                        ", after applying intensity " + finalAmplitude);
+            }
+            vibratorSetAmplitude(finalAmplitude);
         }
     }
 
@@ -989,6 +1006,7 @@ public class VibratorService extends IVibratorService.Stub
                 long timeout = vibratorPerformEffect(prebaked.getId(),
                         prebaked.getEffectStrength());
                 if (timeout > 0) {
+                    // XXX: apply amplitude for effect?
                     noteVibratorOnLocked(vib.uid, timeout);
                     return timeout;
                 }
-- 
2.17.1

