From 2dec71ea426855d97e66ccb4a418eb79c9f785bd Mon Sep 17 00:00:00 2001
From: Dileep Marchya <dmarchya@codeaurora.org>
Date: Thu, 13 Dec 2018 16:12:49 +0530
Subject: [PATCH 2/3] display: Use display id in place of display type

- Use display id to communicate between client & service
  in place of display type in display config version 1.7

Change-Id: I5a6a8e361a20e719b58a6d11209fe875a0622bc7
CRs-Fixed: 2362214
---
 display/config/1.7/IDisplayConfig.hal | 21 ++++++++++-----------
 display/current.txt                   |  2 +-
 2 files changed, 11 insertions(+), 12 deletions(-)

diff --git a/display/config/1.7/IDisplayConfig.hal b/display/config/1.7/IDisplayConfig.hal
index 3e6b661..9f83c1e 100644
--- a/display/config/1.7/IDisplayConfig.hal
+++ b/display/config/1.7/IDisplayConfig.hal
@@ -30,7 +30,6 @@
 package vendor.display.config@1.7;
 
 import @1.6::IDisplayConfig;
-import @1.2::IDisplayConfig;
 
 interface IDisplayConfig extends @1.6::IDisplayConfig {
     enum PowerMode : int32_t {
@@ -43,51 +42,51 @@ interface IDisplayConfig extends @1.6::IDisplayConfig {
     /*
      * Sets new power mode on the specificied display.
      *
-     * @param disp_type display type
+     * @param disp_id display identifier used between client & service
      * @param power_mode new power mode
      * @return error is NONE upon success
      */
     @callflow(next="*")
-    setPowerMode(DisplayTypeExt disp_type, PowerMode power_mode) generates (int32_t error);
+    setPowerMode(uint32_t disp_id, PowerMode power_mode) generates (int32_t error);
 
     /*
      * Query if power mode override is supported by underlying implementation
      * for the specified display.
      *
-     * @param disp_type display type
+     * @param disp_id display identifier used between client & service
      * @return supported true if supported
      */
     @callflow(next="*")
-    isPowerModeOverrideSupported(DisplayTypeExt disp_type) generates (bool supported);
+    isPowerModeOverrideSupported(uint32_t disp_id) generates (bool supported);
 
     /*
      * Query if hdr is supported by the underlying implementation for the specified display.
      *
-     * @param disp_type display type
+     * @param disp_id display identifier used between client & service
      * @return supported true if supported
      */
     @callflow(next="*")
-    isHDRSupported(DisplayTypeExt disp_type) generates (bool supported);
+    isHDRSupported(uint32_t disp_id) generates (bool supported);
 
     /*
      * Query if wide color gamut is supported by the underlying implementation
      * for the specified display.
      *
-     * @param disp_type display type
+     * @param disp_id display identifier used between client & service
      * @return supported true if supported
      */
     @callflow(next="*")
-    isWCGSupported(DisplayTypeExt disp_type) generates (bool supported);
+    isWCGSupported(uint32_t disp_id) generates (bool supported);
 
     /*
      * Sets layer as a mask type (e.g. round corner) identified by the layer id.
      *
-     * @param disp_type display type
+     * @param disp_id display identifier used between client & service
      * @param layer_id layer id used for communication with hwc
      * @return error is NONE upon success
      */
     @callflow(next="*")
-    setLayerAsMask(DisplayTypeExt disp_type, uint64_t layer_id) generates (int32_t error);
+    setLayerAsMask(uint32_t disp_id, uint64_t layer_id) generates (int32_t error);
 
     /*
      * Gets value corresponding to the specified property string from hwc.
diff --git a/display/current.txt b/display/current.txt
index 51a1a53..0456d47 100644
--- a/display/current.txt
+++ b/display/current.txt
@@ -41,4 +41,4 @@ e89567ed6383dc0e5fd168babaf046352962b571f47fba26804c2c7690256b1f vendor.display.
 cbdb70cc5999b9537497b1e56955278ce1c3510245c82f861bf847ed1609f05b vendor.display.config@1.4::IDisplayConfig
 f852a7cf003eaf02a26784dff919ea1f334308df888f406962bfdb08ab51b59e vendor.display.config@1.5::IDisplayConfig
 bff30d77ca2327e719a4bd6938bad222c5f1a87f0517b8baf9ef5c3edd0bdc35 vendor.display.config@1.6::IDisplayConfig
-b506d7518e67005eda1a23a13db087f8eafa636485138f254308b6714eec6657 vendor.display.config@1.7::IDisplayConfig
+ccf20944596b1cd140769257bdb93d10244b256d47e296ec84d41ed1261c1089 vendor.display.config@1.7::IDisplayConfig
-- 
2.17.1

