From b991db4b170c9b4ba4c4636d9e5dcda1a204afaf Mon Sep 17 00:00:00 2001
From: Bruno Martins <bgcngm@gmail.com>
Date: Wed, 5 Sep 2018 01:46:44 +0100
Subject: [PATCH 02/15] Settings: Check connectivity before enabling ADB over
 network

Change-Id: I6c5c468f1b58aefe64065c373968cae0e700e415
---
 res/values/cm_strings.xml                     |  1 +
 .../WirelessAdbPreferenceController.java      | 47 ++++++++++++++-----
 .../development/WirelessAdbWarningDialog.java | 23 +++++++--
 3 files changed, 55 insertions(+), 16 deletions(-)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 353cd2655e..01f02f6ac1 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -257,6 +257,7 @@
     <string name="adb_over_network">ADB over network</string>
     <string name="adb_over_network_summary">Enable TCP/IP debugging over network interfaces (Wi\u2011Fi, USB networks). This setting is reset on reboot</string>
     <string name="adb_over_network_warning">WARNING: When ADB over network is enabled, your phone is open for intrusions on all connected networks!\n\nOnly use this feature when you are connected on trusted networks.\n\nDo you really want to enable this function?</string>
+    <string name="adb_over_network_disallowed_error">ERROR: ADB over network can only be enabled when connected to a network!</string>
 
     <!-- [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings -->
     <plurals name="show_dev_countdown_cm">
diff --git a/src/com/android/settings/development/WirelessAdbPreferenceController.java b/src/com/android/settings/development/WirelessAdbPreferenceController.java
index e1e61e14d0..56961cb741 100644
--- a/src/com/android/settings/development/WirelessAdbPreferenceController.java
+++ b/src/com/android/settings/development/WirelessAdbPreferenceController.java
@@ -17,9 +17,9 @@
 package com.android.settings.development;
 
 import android.content.Context;
-import android.net.NetworkUtils;
-import android.net.wifi.WifiInfo;
-import android.net.wifi.WifiManager;
+import android.net.ConnectivityManager;
+import android.net.LinkAddress;
+import android.net.Network;
 import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.SystemProperties;
@@ -37,6 +37,11 @@ import com.android.settingslib.development.DeveloperOptionsPreferenceController;
 
 import lineageos.providers.LineageSettings;
 
+import java.net.Inet4Address;
+import java.net.Inet6Address;
+import java.net.InetAddress;
+import java.util.List;
+
 public class WirelessAdbPreferenceController extends DeveloperOptionsPreferenceController
         implements PreferenceControllerMixin {
 
@@ -44,14 +49,15 @@ public class WirelessAdbPreferenceController extends DeveloperOptionsPreferenceC
     private static final String PREF_KEY = "adb_over_network";
 
     private final DevelopmentSettingsDashboardFragment mFragment;
-    private final WifiManager mWifiManager;
+
+    private final ConnectivityManager mConnectivityManager;
 
     public WirelessAdbPreferenceController(Context context,
             DevelopmentSettingsDashboardFragment fragment) {
         super(context);
 
         mFragment = fragment;
-        mWifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
+        mConnectivityManager = context.getSystemService(ConnectivityManager.class);
     }
 
     @Override
@@ -98,7 +104,8 @@ public class WirelessAdbPreferenceController extends DeveloperOptionsPreferenceC
 
     public void onWirelessAdbDialogConfirmed() {
         LineageSettings.Secure.putInt(mContext.getContentResolver(),
-                LineageSettings.Secure.ADB_PORT, 5555);
+                LineageSettings.Secure.ADB_PORT,
+                mConnectivityManager.getActiveNetwork() == null ? -1 : 5555);
         updatePreference();
     }
 
@@ -110,12 +117,30 @@ public class WirelessAdbPreferenceController extends DeveloperOptionsPreferenceC
         int port = LineageSettings.Secure.getInt(mContext.getContentResolver(),
                 LineageSettings.Secure.ADB_PORT, -1);
         boolean enabled = port > 0;
-        WifiInfo wifiInfo = mWifiManager.getConnectionInfo();
 
-        if (enabled && wifiInfo != null) {
-            String hostAddress = NetworkUtils.intToInetAddress(
-                    wifiInfo.getIpAddress()).getHostAddress();
-            mPreference.setSummary(hostAddress + ":" + String.valueOf(port));
+        Network network = mConnectivityManager.getActiveNetwork();
+        String networkAddress = null;
+
+        if (network != null) {
+            List<LinkAddress> linkAddresses =
+                    mConnectivityManager.getLinkProperties(network).getLinkAddresses();
+            // Determine local network address.
+            // Use first IPv4 address if available, otherwise use first IPv6.
+            String ipv4 = null, ipv6 = null;
+            for (LinkAddress la : linkAddresses) {
+                final InetAddress addr = la.getAddress();
+                if (ipv4 == null && addr instanceof Inet4Address) {
+                    ipv4 = addr.getHostAddress();
+                    break;
+                } else if (ipv6 == null && addr instanceof Inet6Address) {
+                    ipv6 = addr.getHostAddress();
+                }
+            }
+            networkAddress = ipv4 != null ? ipv4 : ipv6;
+        }
+
+        if (enabled && networkAddress != null) {
+            mPreference.setSummary(networkAddress + ":" + String.valueOf(port));
         } else {
             mPreference.setSummary(R.string.adb_over_network_summary);
         }
diff --git a/src/com/android/settings/development/WirelessAdbWarningDialog.java b/src/com/android/settings/development/WirelessAdbWarningDialog.java
index 2297baa9fc..bf762f21ff 100644
--- a/src/com/android/settings/development/WirelessAdbWarningDialog.java
+++ b/src/com/android/settings/development/WirelessAdbWarningDialog.java
@@ -21,6 +21,8 @@ import android.app.Dialog;
 import android.app.Fragment;
 import android.app.FragmentManager;
 import android.content.DialogInterface;
+import android.net.ConnectivityManager;
+import android.net.Network;
 import android.os.Bundle;
 
 import com.android.internal.logging.nano.MetricsProto;
@@ -49,11 +51,16 @@ public class WirelessAdbWarningDialog extends InstrumentedDialogFragment impleme
 
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        return new AlertDialog.Builder(getActivity())
-                .setMessage(R.string.adb_over_network_warning)
-                .setPositiveButton(android.R.string.ok, this /* onClickListener */)
-                .setNegativeButton(android.R.string.cancel, this /* onClickListener */)
-                .create();
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        if (isConnectedToAnyNetwork()) {
+            builder.setMessage(R.string.adb_over_network_warning);
+            builder.setPositiveButton(android.R.string.ok, this /* onClickListener */);
+            builder.setNegativeButton(android.R.string.cancel, this /* onClickListener */);
+        } else {
+            builder.setMessage(R.string.adb_over_network_disallowed_error);
+            builder.setPositiveButton(android.R.string.ok, this /* onClickListener */);
+        }
+        return builder.create();
     }
 
     @Override
@@ -78,4 +85,10 @@ public class WirelessAdbWarningDialog extends InstrumentedDialogFragment impleme
         }
         host.onWirelessAdbDialogDismissed();
     }
+
+    private boolean isConnectedToAnyNetwork() {
+        ConnectivityManager connMgr = getActivity().getSystemService(ConnectivityManager.class);
+        Network network = connMgr.getActiveNetwork();
+        return network != null;
+    }
 }
-- 
2.17.1

