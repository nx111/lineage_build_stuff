From 11c5fc46b7a7a71a0a080b6bab6ebc83551acc97 Mon Sep 17 00:00:00 2001
From: Uldiniad <olivercscott@gmail.com>
Date: Tue, 30 Oct 2018 23:39:02 +0000
Subject: [PATCH 07/14] Settings: per-app VPN data restriction

*) Add option to disable all vpn data in app data usage settings.

*) Disable the vpn data option when all Wi-Fi and mobile data
   access is disabled.

Change-Id: I574e706725249f97f564417b6685d673a8260bab
---
 res/values/cm_strings.xml                     |  2 ++
 res/xml/app_data_usage.xml                    |  5 +++
 .../settings/datausage/AppDataUsage.java      | 36 ++++++++++++++++---
 3 files changed, 39 insertions(+), 4 deletions(-)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index e57deb55de..9092889a69 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -329,6 +329,8 @@
     <!-- Per-app data restrictions -->
     <string name="data_usage_app_restrict_data">Cellular data</string>
     <string name="data_usage_app_restrict_data_summary">Enable usage of cellular data</string>
+    <string name="data_usage_app_restrict_vpn">VPN data</string>
+    <string name="data_usage_app_restrict_vpn_summary">Enable usage of VPN data</string>
     <string name="data_usage_app_restrict_wifi">Wi\u2011Fi data</string>
     <string name="data_usage_app_restrict_wifi_summary">Enable usage of Wi\u2011Fi data</string>
 
diff --git a/res/xml/app_data_usage.xml b/res/xml/app_data_usage.xml
index 65c0a565de..89d4668fdf 100644
--- a/res/xml/app_data_usage.xml
+++ b/res/xml/app_data_usage.xml
@@ -71,6 +71,11 @@
             settings:useAdditionalSummary="true"
             settings:restrictedSwitchSummary="@string/disabled_by_admin" />
 
+        <SwitchPreference
+            android:key="restrict_vpn"
+            android:title="@string/data_usage_app_restrict_vpn"
+            android:summary="@string/data_usage_app_restrict_vpn_summary" />
+
         <com.android.settingslib.RestrictedSwitchPreference
             android:key="unrestricted_data_saver"
             android:title="@string/unrestricted_app_title"
diff --git a/src/com/android/settings/datausage/AppDataUsage.java b/src/com/android/settings/datausage/AppDataUsage.java
index 64b6c9a844..51cbd61c7d 100644
--- a/src/com/android/settings/datausage/AppDataUsage.java
+++ b/src/com/android/settings/datausage/AppDataUsage.java
@@ -16,6 +16,7 @@ package com.android.settings.datausage;
 
 import static android.net.NetworkPolicyManager.POLICY_REJECT_METERED_BACKGROUND;
 import static android.net.NetworkPolicyManager.POLICY_REJECT_ON_DATA;
+import static android.net.NetworkPolicyManager.POLICY_REJECT_ON_VPN;
 import static android.net.NetworkPolicyManager.POLICY_REJECT_ON_WLAN;
 
 import android.app.Activity;
@@ -73,6 +74,7 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     private static final String KEY_APP_SETTINGS = "app_settings";
     private static final String KEY_RESTRICT_BACKGROUND = "restrict_background";
     private static final String KEY_RESTRICT_DATA = "restrict_data";
+    private static final String KEY_RESTRICT_VPN = "restrict_vpn";
     private static final String KEY_RESTRICT_WLAN = "restrict_wlan";
     private static final String KEY_APP_LIST = "app_list";
     private static final String KEY_CYCLE = "cycle";
@@ -89,6 +91,7 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     private Preference mAppSettings;
     private RestrictedSwitchPreference mRestrictBackground;
     private SwitchPreference mRestrictData;
+    private SwitchPreference mRestrictVpn;
     private SwitchPreference mRestrictWlan;
     private PreferenceCategory mAppList;
 
@@ -171,6 +174,7 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
                 removePreference(KEY_UNRESTRICTED_DATA);
                 removePreference(KEY_RESTRICT_BACKGROUND);
                 removePreference(KEY_RESTRICT_DATA);
+                removePreference(KEY_RESTRICT_VPN);
                 removePreference(KEY_RESTRICT_WLAN);
             } else {
                 mRestrictBackground = (RestrictedSwitchPreference) findPreference(
@@ -178,6 +182,8 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
                 mRestrictBackground.setOnPreferenceChangeListener(this);
                 mRestrictData = (SwitchPreference) findPreference(KEY_RESTRICT_DATA);
                 mRestrictData.setOnPreferenceChangeListener(this);
+                mRestrictVpn = (SwitchPreference) findPreference(KEY_RESTRICT_VPN);
+                mRestrictVpn.setOnPreferenceChangeListener(this);
                 mRestrictWlan = (SwitchPreference) findPreference(KEY_RESTRICT_WLAN);
                 mRestrictWlan.setOnPreferenceChangeListener(this);
                 mUnrestrictedData = (RestrictedSwitchPreference) findPreference(
@@ -221,6 +227,7 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
             removePreference(KEY_APP_SETTINGS);
             removePreference(KEY_RESTRICT_BACKGROUND);
             removePreference(KEY_RESTRICT_DATA);
+            removePreference(KEY_RESTRICT_VPN);
             removePreference(KEY_RESTRICT_WLAN);
             removePreference(KEY_APP_LIST);
         }
@@ -262,6 +269,10 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
             setAppRestrictData(!(Boolean) newValue);
             updatePrefs();
             return true;
+        } else if (preference == mRestrictVpn) {
+            setAppRestrictVpn(!(Boolean) newValue);
+            updatePrefs();
+            return true;
         } else if (preference == mRestrictWlan) {
             setAppRestrictWlan(!(Boolean) newValue);
             updatePrefs();
@@ -287,11 +298,11 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     @VisibleForTesting
     void updatePrefs() {
         updatePrefs(getAppRestrictBackground(), getUnrestrictData(),
-                getAppRestrictData(), getAppRestrictWlan());
+                getAppRestrictData(), getAppRestrictVpn(), getAppRestrictWlan());
     }
 
     private void updatePrefs(boolean restrictBackground, boolean unrestrictData,
-            boolean restrictData, boolean restrictWlan) {
+            boolean restrictData, boolean restrictVpn, boolean restrictWlan) {
         final EnforcedAdmin admin = RestrictedLockUtils.checkIfMeteredDataRestricted(
                 getContext(), mPackageName, UserHandle.getUserId(mAppItem.key));
         if (mRestrictBackground != null) {
@@ -307,6 +318,15 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
         if (mRestrictData != null) {
             mRestrictData.setChecked(!restrictData);
         }
+        if (mRestrictVpn != null) {
+            if (restrictData && restrictWlan) {
+                mRestrictVpn.setEnabled(false);
+                mRestrictVpn.setChecked(false);
+            } else {
+                mRestrictVpn.setEnabled(true);
+                mRestrictVpn.setChecked(!restrictVpn);
+            }
+        }
         if (mRestrictWlan != null) {
             mRestrictWlan.setChecked(!restrictWlan);
         }
@@ -361,6 +381,10 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
         return getAppRestriction(POLICY_REJECT_ON_DATA);
     }
 
+    private boolean getAppRestrictVpn() {
+        return getAppRestriction(POLICY_REJECT_ON_VPN);
+    }
+
     private boolean getAppRestrictWlan() {
         return getAppRestriction(POLICY_REJECT_ON_WLAN);
     }
@@ -382,6 +406,10 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
         setAppRestriction(POLICY_REJECT_ON_DATA, restrict);
     }
 
+    private void setAppRestrictVpn(boolean restrict) {
+        setAppRestriction(POLICY_REJECT_ON_VPN, restrict);
+    }
+
     private void setAppRestrictWlan(boolean restrict) {
         setAppRestriction(POLICY_REJECT_ON_WLAN, restrict);
     }
@@ -499,7 +527,7 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     public void onWhitelistStatusChanged(int uid, boolean isWhitelisted) {
         if (mAppItem.uids.get(uid, false)) {
             updatePrefs(getAppRestrictBackground(), isWhitelisted,
-                    getAppRestrictData(), getAppRestrictWlan());
+                    getAppRestrictData(), getAppRestrictVpn(), getAppRestrictWlan());
         }
     }
 
@@ -507,7 +535,7 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     public void onBlacklistStatusChanged(int uid, boolean isBlacklisted) {
         if (mAppItem.uids.get(uid, false)) {
             updatePrefs(isBlacklisted, getUnrestrictData(),
-                    getAppRestrictData(), getAppRestrictWlan());
+                    getAppRestrictData(), getAppRestrictVpn(), getAppRestrictWlan());
         }
     }
 }
-- 
2.17.1

