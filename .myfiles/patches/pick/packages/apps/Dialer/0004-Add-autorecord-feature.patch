From c1aa8dee0cdff26967c59ec2db3fa8c5e1bbb936 Mon Sep 17 00:00:00 2001
From: DennySPB <dennyspb@gmail.com>
Date: Tue, 10 Jul 2018 16:01:27 +0300
Subject: [PATCH 4/8] Add autorecord feature

Change-Id: I6b7c282ab999d470ba55d28fd14b88cc717f222f
---
 .../dialer/app/res/values/cm_strings.xml      |  3 +++
 .../dialer/app/res/xml/other_settings.xml     | 18 +++++++++++++
 .../app/settings/OtherSettingsFragment.java   |  1 +
 .../android/incallui/CallButtonPresenter.java | 26 ++++++++++++++++++-
 4 files changed, 47 insertions(+), 1 deletion(-)

diff --git a/java/com/android/dialer/app/res/values/cm_strings.xml b/java/com/android/dialer/app/res/values/cm_strings.xml
index 1c2f4ee28..add1d7b5a 100644
--- a/java/com/android/dialer/app/res/values/cm_strings.xml
+++ b/java/com/android/dialer/app/res/values/cm_strings.xml
@@ -55,4 +55,7 @@
     <string name="enable_post_call_title">Post call snackbar</string>
     <string name="enable_post_call_summary">Enable post call notifications at the bottom of screen</string>
 
+    <string name="auto_call_recording_title">Auto call recording</string>
+    <string name="auto_call_recording_key" translatable="false">auto_call_recording</string>
+
 </resources>
diff --git a/java/com/android/dialer/app/res/xml/other_settings.xml b/java/com/android/dialer/app/res/xml/other_settings.xml
index 697a6ce73..85fa7ad96 100644
--- a/java/com/android/dialer/app/res/xml/other_settings.xml
+++ b/java/com/android/dialer/app/res/xml/other_settings.xml
@@ -23,4 +23,22 @@
         android:title="@string/enable_post_call_title"
         android:summary="@string/enable_post_call_summary" />
 
+  <PreferenceCategory
+        android:key="@string/call_recording_category_key"
+        android:title="@string/call_recording_category_title">
+
+    <SwitchPreference
+        android:defaultValue="false"
+        android:key="@string/auto_call_recording_key"
+        android:title="@string/auto_call_recording_title"/>
+
+    <ListPreference
+        android:key="@string/call_recording_format_key"
+        android:title="@string/call_recording_format"
+        android:summary="%s"
+        android:entries="@array/call_recording_encoder_entries"
+        android:entryValues="@array/call_recording_encoder_values"
+        android:defaultValue="0" />
+  </PreferenceCategory>
+
 </PreferenceScreen>
diff --git a/java/com/android/dialer/app/settings/OtherSettingsFragment.java b/java/com/android/dialer/app/settings/OtherSettingsFragment.java
index 941a0bc33..cd5a5e556 100644
--- a/java/com/android/dialer/app/settings/OtherSettingsFragment.java
+++ b/java/com/android/dialer/app/settings/OtherSettingsFragment.java
@@ -24,6 +24,7 @@ import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
 import android.preference.SwitchPreference;
 import android.provider.Settings;
+import com.android.dialer.callrecord.impl.CallRecorderService;
 import com.android.dialer.app.R;
 
 public class OtherSettingsFragment extends PreferenceFragment
diff --git a/java/com/android/incallui/CallButtonPresenter.java b/java/com/android/incallui/CallButtonPresenter.java
index 10f169237..96866edb2 100644
--- a/java/com/android/incallui/CallButtonPresenter.java
+++ b/java/com/android/incallui/CallButtonPresenter.java
@@ -22,6 +22,7 @@ import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
 import android.os.Trace;
+import android.os.Handler;
 import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
 import android.support.v4.os.UserManagerCompat;
@@ -75,6 +76,7 @@ public class CallButtonPresenter
   private boolean automaticallyMuted = false;
   private boolean previousMuteState = false;
   private boolean isInCallButtonUiReady;
+  private boolean mIsRecording = false;
   private PhoneAccountHandle otherAccount;
 
   private CallRecorder.RecordingProgressListener recordingProgressListener =
@@ -142,11 +144,27 @@ public class CallButtonPresenter
   @Override
   public void onStateChange(InCallState oldState, InCallState newState, CallList callList) {
     Trace.beginSection("CallButtonPresenter.onStateChange");
+
+    CallRecorder recorder = CallRecorder.getInstance();
+    boolean isEnabled = PreferenceManager.getDefaultSharedPreferences(context).getBoolean(context.getString(R.string.auto_call_recording_key), false);
+
     if (newState == InCallState.OUTGOING) {
       call = callList.getOutgoingCall();
     } else if (newState == InCallState.INCALL) {
       call = callList.getActiveOrBackgroundCall();
 
+//     final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(mContext);
+//     boolean warningPresented = prefs.getBoolean(KEY_RECORDING_WARNING_PRESENTED, false);
+
+    if (!mIsRecording && isEnabled) {
+                mIsRecording = true;
+                new Handler().postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        callRecordClicked(true);
+                    }
+                }, 500);
+    }
       // When connected to voice mail, automatically shows the dialpad.
       // (On previous releases we showed it when in-call shows up, before waiting for
       // OUTGOING.  We may want to do that once we start showing "Voice mail" label on
@@ -162,7 +180,13 @@ public class CallButtonPresenter
       }
       call = callList.getIncomingCall();
     } else {
-      call = null;
+	    
+    if (isEnabled) {
+        if (recorder.isRecording()) {
+            recorder.finishRecording();
+        }
+    }
+    call = null;
     }
     updateUi(newState, call);
     Trace.endSection();
-- 
2.17.1

