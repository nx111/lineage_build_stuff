From d1467adc5e25c87e53574723a8dfbfe64c0a678a Mon Sep 17 00:00:00 2001
From: zhuw <zhuw@codeaurora.org>
Date: Mon, 8 Oct 2018 17:20:45 +0800
Subject: [PATCH 2/9] Requirement from EIS team

don't set endofstream when pause by default
add switcher for setting vendor tags when pasue

CRs-Fixed:2353032
Change-Id: I7da748cff85584d65818834180a5f9a843c1009d

# Conflicts:
#	res/values/qcomstrings.xml
---
 res/values/camera2arrays.xml              |  2 ++
 res/values/qcomstrings.xml                |  2 ++
 src/com/android/camera/CaptureModule.java | 11 ++++++++---
 3 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/res/values/camera2arrays.xml b/res/values/camera2arrays.xml
index 5a7fe9ac2..24a4571bd 100755
--- a/res/values/camera2arrays.xml
+++ b/res/values/camera2arrays.xml
@@ -1056,12 +1056,14 @@ for time lapse recording -->
         <item>@string/pref_camera2_eis_entry_disable</item>
         <item>@string/pref_camera2_eis_entry_v2enable</item>
         <item>@string/pref_camera2_eis_entry_v3enable</item>
+        <item>@string/pref_camera2_eis_entry_v3_set_when_pause</item>
     </string-array>
 
     <string-array name="pref_camera2_eis_entryvalues" translatable="false">
         <item>@string/pref_camera2_eis_entry_value_disable</item>
         <item>@string/pref_camera2_eis_entry_value_v2enable</item>
         <item>@string/pref_camera2_eis_entry_value_v3enable</item>
+        <item>@string/pref_camera2_eis_entry_value_v3_set_when_pause</item>
     </string-array>
 
     <string-array name="pref_camera2_fovc_entries" translatable="false">
diff --git a/res/values/qcomstrings.xml b/res/values/qcomstrings.xml
index e89475714..5752c3e7d 100755
--- a/res/values/qcomstrings.xml
+++ b/res/values/qcomstrings.xml
@@ -1195,8 +1195,10 @@
     <string name="pref_camera2_eis_entry_v2enable">V2</string>
     <string name="pref_camera2_eis_entry_v3enable">V3</string>
     <string name="pref_camera2_eis_entry_disable">Disabled</string>
+    <string name="pref_camera2_eis_entry_v3_set_when_pause">V3 and set when pause</string>
     <string name="pref_camera2_eis_entry_value_v2enable" translatable="false">V2</string>
     <string name="pref_camera2_eis_entry_value_v3enable" translatable="false">V3</string>
+    <string name="pref_camera2_eis_entry_value_v3_set_when_pause" translatable="false">V3SetWhenPause</string>
     <string name="pref_camera2_eis_entry_value_disable" translatable="false">disable</string>
 
     <string name="pref_camera2_fovc_title">Video FOVC</string>
diff --git a/src/com/android/camera/CaptureModule.java b/src/com/android/camera/CaptureModule.java
index 8c25df752..846bfbce2 100755
--- a/src/com/android/camera/CaptureModule.java
+++ b/src/com/android/camera/CaptureModule.java
@@ -4595,9 +4595,14 @@ public class CaptureModule implements CameraModule, PhotoController,
         Log.v(TAG, "pauseVideoRecording");
         mMediaRecorderPausing = true;
         mRecordingTotalTime += SystemClock.uptimeMillis() - mRecordingStartTime;
+        String value = mSettingsManager.getValue(SettingsManager.KEY_EIS_VALUE);
+        boolean noNeedEndofStreamWhenPause = value != null && value.equals("V3");
         // As EIS is not supported for HFR case (>=120 )
         // and FOVC also currently donâ€™t require this for >=120 case
-        if (mHighSpeedCapture && ((int)mHighSpeedFPSRange.getUpper() >= HIGH_SESSION_MAX_FPS)) {
+        // so use noNeedEndOfStreamInHFR to control
+        boolean noNeedEndOfStreamInHFR = mHighSpeedCapture &&
+                ((int)mHighSpeedFPSRange.getUpper() >= HIGH_SESSION_MAX_FPS);
+        if (noNeedEndofStreamWhenPause || noNeedEndOfStreamInHFR) {
             mMediaRecorder.pause();
         } else {
             setEndOfStream(false, false);
@@ -4635,7 +4640,7 @@ public class CaptureModule implements CameraModule, PhotoController,
                 }
             } else {
                 // is pause or stopRecord
-                if (!(mMediaRecorderPausing && mStopRecPending) && (mCurrentSession != null)) {
+                if ((mMediaRecorderPausing || mStopRecPending) && (mCurrentSession != null)) {
                     mCurrentSession.stopRepeating();
                     try {
                         mVideoRequestBuilder.set(CaptureModule.recording_end_stream, (byte) 0x01);
@@ -5300,7 +5305,7 @@ public class CaptureModule implements CameraModule, PhotoController,
         if (value != null) {
             if (value.equals("V2")) {
                 mStreamConfigOptMode = STREAM_CONFIG_MODE_QTIEIS_REALTIME;
-            } else if (value.equals("V3")) {
+            } else if (value.equals("V3") || value.equals("V3SetWhenPause")) {
                 mStreamConfigOptMode = STREAM_CONFIG_MODE_QTIEIS_LOOKAHEAD;
             }
             byte byteValue = (byte) (value.equals("disable") ? 0x00 : 0x01);
-- 
2.17.1

