From 1e0b87297c38953b31fae587f1dda244cb5b0a87 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Tue, 5 Feb 2019 09:44:56 +0100
Subject: [PATCH] Squash of
 github/lineage-16.0(de1599f6)..lineage-16.0-android-9.0.0_r31(9d970b8a) (DO
 NOT SUBMIT)

Luca Stefani (1):
 - Merge tag 'android-9.0.0_r31' into lineage-16.0-android-9.0.0_r31

Wei Wang (1):
 - libperfmgr: Update nodes in 2 passes

android-build-team Robot (1):
 - Snap for 5073521 from 23fa94128f73282f62a410a37bdcd415265a62f7 to
   pi-qpr2-release

Change-Id: I709061240b7524874fbfeb656d8b8294ea7019e6

Change-Id: I423cc9d2015eeed100c4b00b5c5d54f831b19273
---
 libperfmgr/Node.cc                |  8 +++++---
 libperfmgr/NodeLooperThread.cc    | 10 ++++++++--
 libperfmgr/include/perfmgr/Node.h |  2 +-
 3 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/libperfmgr/Node.cc b/libperfmgr/Node.cc
index 63cf8aaa..c35c3ca1 100644
--- a/libperfmgr/Node.cc
+++ b/libperfmgr/Node.cc
@@ -66,7 +66,7 @@ bool Node::RemoveRequest(const std::string& hint_type) {
     return ret;
 }
 
-std::chrono::milliseconds Node::Update() {
+std::chrono::milliseconds Node::Update(bool log_error) {
     std::size_t value_index = default_val_index_;
     std::chrono::milliseconds expire_time = std::chrono::milliseconds::max();
 
@@ -86,8 +86,10 @@ std::chrono::milliseconds Node::Update() {
             open(node_path_.c_str(), O_WRONLY | O_CLOEXEC | O_TRUNC)));
 
         if (fd_ == -1 || !android::base::WriteStringToFd(req_value, fd_)) {
-            LOG(ERROR) << "Failed to write to node: " << node_path_
-                       << " with value: " << req_value << ", fd: " << fd_;
+            if (log_error) {
+                LOG(WARNING) << "Failed to write to node: " << node_path_
+                             << " with value: " << req_value << ", fd: " << fd_;
+            }
             // Retry in 500ms or sooner
             expire_time = std::min(expire_time, std::chrono::milliseconds(500));
         } else {
diff --git a/libperfmgr/NodeLooperThread.cc b/libperfmgr/NodeLooperThread.cc
index e7a63cc5..b4a27a96 100644
--- a/libperfmgr/NodeLooperThread.cc
+++ b/libperfmgr/NodeLooperThread.cc
@@ -98,9 +98,15 @@ void NodeLooperThread::DumpToFd(int fd) {
 bool NodeLooperThread::threadLoop() {
     ::android::AutoMutex _l(lock_);
     std::chrono::milliseconds timeout_ms = kMaxUpdatePeriod;
+
+    // Update 2 passes: some node may have dependency in other node
+    // e.g. update cpufreq min to VAL while cpufreq max still set to
+    // a value lower than VAL, is expected to fail in first pass
+    for (auto& n : nodes_) {
+        n->Update(false);
+    }
     for (auto& n : nodes_) {
-        auto t = n->Update();
-        timeout_ms = std::min(t, timeout_ms);
+        timeout_ms = std::min(n->Update(), timeout_ms);
     }
 
     nsecs_t sleep_timeout_ns = std::numeric_limits<nsecs_t>::max();
diff --git a/libperfmgr/include/perfmgr/Node.h b/libperfmgr/include/perfmgr/Node.h
index ea4c3e34..560979b0 100644
--- a/libperfmgr/include/perfmgr/Node.h
+++ b/libperfmgr/include/perfmgr/Node.h
@@ -61,7 +61,7 @@ class Node {
     // std::chrono::milliseconds::max() if no active request on Node; update
     // node's controlled file node value and the current value index based on
     // active request.
-    std::chrono::milliseconds Update();
+    std::chrono::milliseconds Update(bool log_error = true);
 
     std::string GetName() const;
     std::string GetPath() const;
-- 
2.17.1

