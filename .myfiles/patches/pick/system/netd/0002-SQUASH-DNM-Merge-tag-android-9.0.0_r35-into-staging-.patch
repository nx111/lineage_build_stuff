From d3adbcfd2bf4407770178e72c9c91256a911a23a Mon Sep 17 00:00:00 2001
From: "Kevin F. Haggerty" <haggertk@lineageos.org>
Date: Wed, 3 Apr 2019 22:33:37 -0600
Subject: [PATCH 2/2] [SQUASH][DNM] Merge tag 'android-9.0.0_r35' into
 staging/lineage-16.0_merge-android-9.0.0_r35

Android 9.0.0 release 35

* tag 'android-9.0.0_r35':
  Clear Element.mRef immediately after deallocating it
  Fix fortify_fatal issue during DNSServiceProcessResult()
  Fix use-after-free in NetworkController::removeInterfaceAddress()

Change-Id: I617ddfac3581cb3ef1c9655296fafb8d53dfec56
---
 server/MDnsSdListener.cpp    | 11 ++++++++++-
 server/MDnsSdListener.h      |  3 ++-
 server/NetworkController.cpp |  4 +++-
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/server/MDnsSdListener.cpp b/server/MDnsSdListener.cpp
index e497bfd..b54014c 100644
--- a/server/MDnsSdListener.cpp
+++ b/server/MDnsSdListener.cpp
@@ -146,7 +146,7 @@ void MDnsSdListener::Handler::stop(SocketClient *cli, int argc, char **argv, con
         return;
     }
     if (VDBG) ALOGD("Stopping %s with ref %p", str, ref);
-    DNSServiceRefDeallocate(*ref);
+    mMonitor->deallocateServiceRef(ref);
     mMonitor->freeServiceRef(requestId);
     char *msg;
     asprintf(&msg, "%s stopped", str);
@@ -610,7 +610,9 @@ void MDnsSdListener::Monitor::run() {
                         ALOGD("Monitor found [%d].revents = %d - calling ProcessResults",
                                 i, mPollFds[i].revents);
                     }
+                    pthread_mutex_lock(&mHeadMutex);
                     DNSServiceProcessResult(*(mPollRefs[i]));
+                    pthread_mutex_unlock(&mHeadMutex);
                     mPollFds[i].revents = 0;
                 }
             }
@@ -763,3 +765,10 @@ void MDnsSdListener::Monitor::freeServiceRef(int id) {
     }
     pthread_mutex_unlock(&mHeadMutex);
 }
+
+void MDnsSdListener::Monitor::deallocateServiceRef(DNSServiceRef* ref) {
+    pthread_mutex_lock(&mHeadMutex);
+    DNSServiceRefDeallocate(*ref);
+    *ref = nullptr;
+    pthread_mutex_unlock(&mHeadMutex);
+}
diff --git a/server/MDnsSdListener.h b/server/MDnsSdListener.h
index 8cd596a..8c6096e 100644
--- a/server/MDnsSdListener.h
+++ b/server/MDnsSdListener.h
@@ -79,8 +79,9 @@ private:
         int startService();
         int stopService();
         void run();
+        void deallocateServiceRef(DNSServiceRef* ref);
 
-    private:
+      private:
         int rescan(); // returns the number of elements in the poll
         class Element {
         public:
diff --git a/server/NetworkController.cpp b/server/NetworkController.cpp
index 5bbfe3f..a260056 100644
--- a/server/NetworkController.cpp
+++ b/server/NetworkController.cpp
@@ -629,7 +629,9 @@ bool NetworkController::removeInterfaceAddress(unsigned ifindex, const char* add
     std::unordered_set<unsigned>& ifindices = ifindicesIter->second;
     if (ifindices.erase(ifindex) > 0) {
         if (ifindices.size() == 0) {
-            mAddressToIfindices.erase(ifindicesIter);
+            mAddressToIfindices.erase(ifindicesIter);  // Invalidates ifindices
+            // The address is no longer configured on any interface.
+            return true;
         }
     } else {
         ALOGE("No record of address %s on interface %u", address, ifindex);
-- 
2.17.1

