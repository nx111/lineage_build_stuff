From 7711f30aa286cfa907ae91e29b334f1afcc7b3da Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Fri, 15 Feb 2019 20:06:32 +0800
Subject: [PATCH 16/17] debug for sync setting

Change-Id: Iee79cca87d191213635b8ce96ead31b81a5f3f1e
---
 .../AccountSyncPreferenceController.java       | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/src/com/android/settings/accounts/AccountSyncPreferenceController.java b/src/com/android/settings/accounts/AccountSyncPreferenceController.java
index c7707137b7..0cc6284c61 100644
--- a/src/com/android/settings/accounts/AccountSyncPreferenceController.java
+++ b/src/com/android/settings/accounts/AccountSyncPreferenceController.java
@@ -27,6 +27,7 @@ import android.os.UserHandle;
 import android.support.annotation.VisibleForTesting;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceScreen;
+import android.util.Log;
 
 import com.android.internal.logging.nano.MetricsProto;
 import com.android.settings.R;
@@ -111,11 +112,22 @@ public class AccountSyncPreferenceController extends AbstractPreferenceControlle
             for (int i = 0, n = syncAdapters.length; i < n; i++) {
                 final SyncAdapterType sa = syncAdapters[i];
                 if (!sa.accountType.equals(mAccount.type) || !sa.isUserVisible()) {
+                    if (!sa.accountType.equals(mAccount.type)) {
+                        Log.d(TAG, "syncAdapters[" + i + "] accountType(" + sa.accountType
+                            + ") != " + mAccount.name + "'s type(" + mAccount.type + "), skip it.");
+                    }
+                    if (!sa.isUserVisible()) {
+                        Log.d(TAG, "syncAdapters[" + i + "] accountType(" + sa.accountType
+                            + ") is not UserVisible, skip it.");
+                    }
+
                     continue;
                 }
                 final int syncState =
                         ContentResolver.getIsSyncableAsUser(mAccount, sa.authority, userId);
                 if (syncState > 0) {
+                    Log.d(TAG, "syncAdapters[" + i + "] accountType(" + sa.accountType
+                            + ") is syncable.");
                     total++;
                     final boolean syncEnabled = ContentResolver.getSyncAutomaticallyAsUser(
                             mAccount, sa.authority, userId);
@@ -124,9 +136,15 @@ public class AccountSyncPreferenceController extends AbstractPreferenceControlle
                     if (oneTimeSyncMode || syncEnabled) {
                         enabled++;
                     }
+                } else {
+                    Log.d(TAG, "syncAdapters[" + i + "] accountType(" + sa.accountType
+                            + ") is not syncable, syncState=" + syncState);
                 }
             }
+        } else {
+            Log.d(TAG, "syncAdapters is null, all sync be off.");
         }
+
         if (enabled == 0) {
             preference.setSummary(R.string.account_sync_summary_all_off);
         } else if (enabled == total) {
-- 
2.17.1

