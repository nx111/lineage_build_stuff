From 8d0163df3735219f470606b72349e44d3228a2ee Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Fri, 22 Feb 2019 22:36:31 +0800
Subject: [PATCH 38/41] BatteryService: debug output by isLoggable.

Change-Id: Ib7b884eaa459b6b3a1e068961b58e9ee4beab6b5
---
 .../java/com/android/server/BatteryService.java | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/services/core/java/com/android/server/BatteryService.java b/services/core/java/com/android/server/BatteryService.java
index da3dda8b16b..c7901c44db1 100644
--- a/services/core/java/com/android/server/BatteryService.java
+++ b/services/core/java/com/android/server/BatteryService.java
@@ -59,6 +59,7 @@ import android.os.UserHandle;
 import android.provider.Settings;
 import android.service.battery.BatteryServiceDumpProto;
 import android.util.EventLog;
+import android.util.Log;
 import android.util.MutableInt;
 import android.util.Slog;
 import android.util.proto.ProtoOutputStream;
@@ -123,7 +124,7 @@ import motorola.hardware.health.V1_0.IMotHealth;
 public final class BatteryService extends SystemService {
     private static final String TAG = BatteryService.class.getSimpleName();
 
-    private static final boolean DEBUG = true;
+    private static final boolean DEBUG = false;
 
     private static final int BATTERY_SCALE = 100;    // battery capacity is a percentage
 
@@ -505,7 +506,7 @@ public final class BatteryService extends SystemService {
             mPlugType = BATTERY_PLUGGED_NONE;
         }
 
-        if (DEBUG) {
+        if (Log.isLoggable(TAG, Log.VERBOSE)) {
             Slog.d(TAG, "Processing new values: "
                     + "info=" + mHealthInfo
                     + ", mBatteryLevelCritical=" + mBatteryLevelCritical
@@ -749,7 +750,7 @@ public final class BatteryService extends SystemService {
         intent.putExtra("plugged_raw", mPlugType);
         intent.putExtra("mod_type", mBatteryModProps.modType);
         intent.putExtra("mod_psrc", mBatteryModProps.modPowerSource);
-        if (DEBUG) {
+        if (Log.isLoggable(TAG, Log.VERBOSE)) {
             Slog.d(TAG, "Sending ACTION_BATTERY_CHANGED. scale:" + BATTERY_SCALE
                     + ", info:" + mHealthInfo.toString());
         }
@@ -855,9 +856,9 @@ public final class BatteryService extends SystemService {
                     // If the discharge cycle is bad enough we want to know about it.
                     logBatteryStatsLocked();
                 }
-                if (DEBUG) Slog.v(TAG, "duration threshold: " + durationThreshold +
+                if (Log.isLoggable(TAG, Log.VERBOSE)) Slog.v(TAG, "duration threshold: " + durationThreshold +
                         " discharge threshold: " + dischargeThreshold);
-                if (DEBUG) Slog.v(TAG, "duration: " + duration + " discharge: " +
+                if (Log.isLoggable(TAG, Log.VERBOSE)) Slog.v(TAG, "duration: " + duration + " discharge: " +
                         (mDischargeStartLevel - mHealthInfo.batteryLevel));
             } catch (NumberFormatException e) {
                 Slog.e(TAG, "Invalid DischargeThresholds GService string: " +
@@ -1126,7 +1127,7 @@ public final class BatteryService extends SystemService {
     
     private boolean isModBatteryActive() {
         String str;
-        if (DEBUG) {
+        if (Log.isLoggable(TAG, Log.VERBOSE)) {
             str = TAG;
             StringBuilder stringBuilder = new StringBuilder();
             stringBuilder.append("isModBatteryActive: modLevel=");
@@ -1139,7 +1140,7 @@ public final class BatteryService extends SystemService {
             return false;
         }
         str = SystemProperties.get("sys.mod.batterymode");
-        if (DEBUG) {
+        if (Log.isLoggable(TAG, Log.VERBOSE)) {
             String str2 = TAG;
             StringBuilder stringBuilder2 = new StringBuilder();
             stringBuilder2.append("isModBatteryActive:  Battery Mode is ");
@@ -1195,7 +1196,7 @@ public final class BatteryService extends SystemService {
             // mLineageBatteryLights is initialized during PHASE_BOOT_COMPLETED
             // This means we don't have Lineage battery settings yet so skip.
             if (mLineageBatteryLights == null) {
-                if (DEBUG) {
+                if (Log.isLoggable(TAG, Log.VERBOSE)) {
                     Slog.w(TAG, "updateLightsLocked: mLineageBatteryLights is not yet ready; "
                             + "skipping");
                 }
-- 
2.17.1

