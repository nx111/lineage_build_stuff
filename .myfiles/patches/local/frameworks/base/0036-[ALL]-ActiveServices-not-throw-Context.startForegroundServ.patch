From 4d2f65e8bf523b770829ae294bfa7624324189e6 Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Sat, 15 Dec 2018 00:54:48 +0800
Subject: [PATCH 36/41] ActiveServices: not throw
 Context.startForegroundService() when app allow startup after boot
 completed,.

Change-Id: Ie8fd2b3255e7d8534ddf49662c0c447f044d0a80
---
 .../java/com/android/server/am/ActiveServices.java    | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/am/ActiveServices.java b/services/core/java/com/android/server/am/ActiveServices.java
index a58b4b7bb2a..1d1f899db07 100644
--- a/services/core/java/com/android/server/am/ActiveServices.java
+++ b/services/core/java/com/android/server/am/ActiveServices.java
@@ -2654,7 +2654,10 @@ public final class ActiveServices {
                     if (DEBUG_BACKGROUND_CHECK) {
                         Slog.i(TAG, "Launched service must call startForeground() within timeout: " + r);
                     }
-                    scheduleServiceForegroundTransitionTimeoutLocked(r);
+                    final int mode = mAm.mAppOpsService.checkOperation(
+                        AppOpsManager.OP_BOOT_COMPLETED, r.appInfo.uid, r.packageName);
+                    if (mode != AppOpsManager.MODE_ALLOWED && mode != AppOpsManager.MODE_DEFAULT)
+                        scheduleServiceForegroundTransitionTimeoutLocked(r);
                 } else {
                     if (DEBUG_BACKGROUND_CHECK) {
                         Slog.i(TAG, "Service already foreground; no new timeout: " + r);
@@ -2796,7 +2799,11 @@ public final class ActiveServices {
                     AppOpsManager.OP_START_FOREGROUND, r.appInfo.uid, r.packageName);
             mAm.mHandler.removeMessages(
                     ActivityManagerService.SERVICE_FOREGROUND_TIMEOUT_MSG, r);
-            if (r.app != null) {
+
+            final int mode = mAm.mAppOpsService.checkOperation(
+                    AppOpsManager.OP_BOOT_COMPLETED, r.appInfo.uid, r.packageName);
+
+            if (r.app != null && mode != AppOpsManager.MODE_ALLOWED && mode != AppOpsManager.MODE_DEFAULT) {
                 Message msg = mAm.mHandler.obtainMessage(
                         ActivityManagerService.SERVICE_FOREGROUND_CRASH_MSG);
                 msg.obj = r.app;
-- 
2.17.1

