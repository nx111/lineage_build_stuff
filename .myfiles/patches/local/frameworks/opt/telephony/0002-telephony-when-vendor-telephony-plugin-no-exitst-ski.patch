From a9d0603bfa8b5ca9c11f2f8bf16412bd22a0d8bf Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Sat, 27 Oct 2018 15:56:53 +0800
Subject: [PATCH 2/3] telephony: when vendor telephony plugin no exitst,skip
 it.

Change-Id: I09088b6d909fae735d1a545c1a99ff218c113cee
---
 .../telephony/TelephonyComponentFactory.java  | 32 +++++++++++++++----
 1 file changed, 25 insertions(+), 7 deletions(-)

diff --git a/src/java/com/android/internal/telephony/TelephonyComponentFactory.java b/src/java/com/android/internal/telephony/TelephonyComponentFactory.java
index 604c1a61f..08089f7c9 100644
--- a/src/java/com/android/internal/telephony/TelephonyComponentFactory.java
+++ b/src/java/com/android/internal/telephony/TelephonyComponentFactory.java
@@ -38,7 +38,10 @@ import com.android.internal.telephony.uicc.UiccProfile;
 
 import dalvik.system.PathClassLoader;
 
+import java.io.File;
 import java.lang.reflect.Constructor;
+import java.lang.reflect.Method;
+import java.nio.file.*;
 
 /**
  * This class has one-line methods to instantiate objects only. The purpose is to make code
@@ -54,18 +57,33 @@ public class TelephonyComponentFactory {
             String fullClsName = "com.qualcomm.qti.internal.telephony.QtiTelephonyComponentFactory";
             String libPath = "/system/framework/qti-telephony-common.jar";
 
+            Path path = Paths.get(libPath);
+
+            if (fullClsName == null || fullClsName.length() == 0 || Files.notExists(path)) {
+                Rlog.d(LOG_TAG, "no customized TelephonyPlugin available, fallback to default");
+                fullClsName = "com.android.internal.telephony.TelephonyComponentFactory";
+                sInstance = new TelephonyComponentFactory();
+                return sInstance;
+            }
+
+            PathClassLoader classLoader = new PathClassLoader(libPath,
+                  ClassLoader.getSystemClassLoader());
+            Rlog.d(LOG_TAG, "classLoader = " + classLoader);
+
+            Class<?> cls = null;
             try {
-                PathClassLoader classLoader = new PathClassLoader(libPath,
-                        ClassLoader.getSystemClassLoader());
-                Class<?> cls = Class.forName(fullClsName, false, classLoader);
+                cls = Class.forName(fullClsName, false, classLoader);
+                Rlog.d(LOG_TAG, "cls = " + cls);
                 Constructor custMethod = cls.getConstructor();
+                Rlog.d(LOG_TAG, "constructor method = " + custMethod);
                 sInstance = (TelephonyComponentFactory) custMethod.newInstance();
-                Rlog.i(LOG_TAG, "Using QtiTelephonyComponentFactory");
-            } catch (NoClassDefFoundError | ClassNotFoundException e) {
-                Rlog.e(LOG_TAG, "QtiTelephonyComponentFactory not used - fallback to default");
+            } catch (NoClassDefFoundError e) {
+                e.printStackTrace();
+                Rlog.e(LOG_TAG, "error loading TelephonyComponentFactory");
                 sInstance = new TelephonyComponentFactory();
             } catch (Exception e) {
-                Rlog.e(LOG_TAG, "Error loading QtiTelephonyComponentFactory - fallback to default");
+                e.printStackTrace();
+                Rlog.e(LOG_TAG, "Error loading TelephonyComponentFactory");
                 sInstance = new TelephonyComponentFactory();
             }
         }
-- 
2.17.1

